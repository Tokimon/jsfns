<script defer>
	[...document.querySelectorAll('.module .hljs-title.class_')].forEach((element) => {
		const { innerHTML: id } = element;
		const tooltip = document.getElementById('Tooltip-' + id.trim());
		if (!tooltip) return;
		if (element.previousElementSibling?.classList.contains('hljs-keyword')) return;

		element.style.cursor = 'default';

		element.addEventListener('mouseenter', () => {
			tooltip.style.display = 'block';

			const viewport = document.scrollingElement;
			const tooltipH = tooltip.offsetHeight;
			let tooltipW = tooltip.offsetWidth;

			if (tooltipW + 30 > viewport.clientWidth) {
				tooltipW = viewport.clientWidth - 30;
				tooltip.style.maxWidth = tooltipW + 'px';
			}

			const { top, bottom, left } = element.getBoundingClientRect();

			const refTop = top + viewport.scrollTop;
			const refBottom = bottom + viewport.scrollTop;
			const refLeft = left + viewport.scrollLeft;

			let tooltipTop = refBottom;
			let tooltipLeft = Math.round(refLeft + element.offsetWidth / 2 - tooltip.offsetWidth / 2);

			if (bottom + tooltip.offsetHeight > viewport.clientHeight) {
				tooltipTop = refTop - tooltipH;
			}

			const tooltipMaxRight = tooltipLeft + tooltipW + 15;
			if (tooltipMaxRight > viewport.clientWidth) {
				tooltipLeft -= tooltipMaxRight - viewport.clientWidth;
			}

			tooltip.style.left = tooltipLeft + 'px';
			tooltip.style.top = tooltipTop + 'px';
			tooltip.style.zIndex = 999;
		});

		element.addEventListener('mouseleave', () => {
			tooltip.style.cssText = '';
		});
	});
</script>
