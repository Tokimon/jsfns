{
	"id": 0,
	"name": "@js-fns/web",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "addClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/addClass.ts",
							"line": 8,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/addClass.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds one or multiple class names to a DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The given "
											},
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/addClass.ts",
									"line": 8,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/addClass.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "HTML ELement to add class names to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 5,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class name(s) to add"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/addClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/addClass.ts#L1"
				}
			]
		},
		{
			"id": 6,
			"name": "append",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 7,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/append.ts",
							"line": 14,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/append.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 8,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Append DOM element or plain HTML to the end of a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inserted child element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/append.ts",
									"line": 14,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/append.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 9,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to append to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 10,
									"name": "insertElm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element or HTML (or selector) to append to insert"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/append.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/append.ts#L1"
				}
			]
		},
		{
			"id": 11,
			"name": "attr",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 12,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/attr.ts",
							"line": 19,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/attr.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 13,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get/set the value of an attribute on a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Data found in the attribute (the old value if {value} is defined)"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the value of an attribute\nattr(document.documentElement, 'lang');\n\n// Set the value of an attribute\nattr(document.documentElement, 'lang', 'da-DK');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/attr.ts",
									"line": 19,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/attr.ts#L19"
								}
							],
							"parameters": [
								{
									"id": 14,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to fetch/set the attribute from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 15,
									"name": "attrName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the attribute to handle"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to insert into the attribute"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						12
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/attr.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/attr.ts#L1"
				}
			]
		},
		{
			"id": 17,
			"name": "boxModel",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 24,
					"name": "BoxModelMapping",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/boxModel.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L8"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 25,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28,
									"name": "border",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L11"
										}
									],
									"type": {
										"type": "reference",
										"target": 18,
										"name": "BoxModelSectionMapping",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 26,
									"name": "margin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L9"
										}
									],
									"type": {
										"type": "reference",
										"target": 18,
										"name": "BoxModelSectionMapping",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 27,
									"name": "padding",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L10"
										}
									],
									"type": {
										"type": "reference",
										"target": 18,
										"name": "BoxModelSectionMapping",
										"package": "@js-fns/web"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28,
										26,
										27
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/boxModel.ts",
									"line": 8,
									"character": 30,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L8"
								}
							]
						}
					}
				},
				{
					"id": 18,
					"name": "BoxModelSectionMapping",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/boxModel.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L1"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 19,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22,
									"name": "bottom",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 4,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L4"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 21,
									"name": "left",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 3,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L3"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 23,
									"name": "right",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 5,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L5"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 20,
									"name": "top",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/boxModel.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22,
										21,
										23,
										20
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/boxModel.ts",
									"line": 1,
									"character": 37,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L1"
								}
							]
						}
					}
				},
				{
					"id": 29,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/boxModel.ts",
							"line": 32,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses the box model numbers of an given Element (margin, padding and border widths)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The mapping of the box model"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nboxModel(someDiv);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/boxModel.ts",
									"line": 32,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L32"
								}
							],
							"parameters": [
								{
									"id": 31,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to parse numbers from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 24,
								"name": "BoxModelMapping",
								"package": "@js-fns/web"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						24,
						18
					]
				},
				{
					"title": "Functions",
					"children": [
						29
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/boxModel.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/boxModel.ts#L1"
				}
			]
		},
		{
			"id": 32,
			"name": "children",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 33,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/children.ts",
							"line": 13,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/children.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the children of a given DOM element and return it as an Array"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found child DOM elements"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nchildren(someDiv);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/children.ts",
									"line": 13,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/children.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 35,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to find children from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ParentNode"
										},
										"name": "ParentNode",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						33
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/children.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/children.ts#L1"
				}
			]
		},
		{
			"id": 36,
			"name": "classNames",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 41,
					"name": "Option",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/classNames.ts",
							"line": 2,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L2"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 37,
								"name": "cnObj",
								"package": "@js-fns/web"
							}
						]
					}
				},
				{
					"id": 37,
					"name": "cnObj",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/classNames.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L1"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/classNames.ts",
									"line": 1,
									"character": 20,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L1"
								}
							],
							"indexSignature": {
								"id": 39,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/web/src/classNames.ts",
										"line": 1,
										"character": 22,
										"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L1"
									}
								],
								"parameters": [
									{
										"id": 40,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						}
					}
				},
				{
					"id": 42,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/classNames.ts",
							"line": 5,
							"character": 6,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/classNames.ts",
									"line": 5,
									"character": 19,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L5"
								}
							],
							"parameters": [
								{
									"id": 44,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 41,
													"name": "Option",
													"package": "@js-fns/web"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 41,
														"name": "Option",
														"package": "@js-fns/web"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						41,
						37
					]
				},
				{
					"title": "Functions",
					"children": [
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/classNames.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/classNames.ts#L1"
				}
			]
		},
		{
			"id": 45,
			"name": "create",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 46,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/create.ts",
							"line": 28,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/create.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an element from a given CSS selector (restricted to only one element)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created element"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a div\ncreate();\n// -> <div />\n\n// Create an element\ncreate('img');\n// -> <img />\n\n// Create an element from a selector\ncreate(#MyElement.active);\n// -> <div id=\"MyElement\" class=\"active\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/create.ts",
									"line": 28,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/create.ts#L28"
								}
							],
							"parameters": [
								{
									"id": 48,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CSS selector to convert"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'div'"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						46
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/create.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/create.ts#L1"
				}
			]
		},
		{
			"id": 49,
			"name": "css",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 50,
					"name": "CSSStyleProperties",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/css.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L8"
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "key",
						"parameterType": {
							"type": "reference",
							"target": 580,
							"name": "CSSStyleKey",
							"package": "@js-fns/web"
						},
						"templateType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "literal",
									"value": null
								}
							]
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 51,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/css.ts",
							"line": 102,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L102"
						},
						{
							"fileName": "packages/web/src/css.ts",
							"line": 117,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L117"
						},
						{
							"fileName": "packages/web/src/css.ts",
							"line": 119,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L119"
						}
					],
					"signatures": [
						{
							"id": 52,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set multiple inline styling properties on a DOM element.\n\nNOTE:\n- "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " as value, removes the given property\n- "
									},
									{
										"kind": "code",
										"text": "`!important`"
									},
									{
										"kind": "text",
										"text": " in the value will be parsed and set correctly"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "All styling on the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/css.ts",
									"line": 102,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 53,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to set the style on"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								},
								{
									"id": 54,
									"name": "style",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Styling to set on the element"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 50,
										"name": "CSSStyleProperties",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "CSSStyleDeclaration"
								},
								"name": "CSSStyleDeclaration",
								"package": "typescript"
							}
						},
						{
							"id": 55,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get or set an inline style property on a DOM element.\n\nNOTE:\n- "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " removes the given property\n- "
									},
									{
										"kind": "code",
										"text": "`!important`"
									},
									{
										"kind": "text",
										"text": " added to the value, it will be parsed and set correctly\n- Values that are pure numbers or pixel values will be converted to number before returned"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The value of the property"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/css.ts",
									"line": 117,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L117"
								}
							],
							"parameters": [
								{
									"id": 56,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to get/set the style on"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								},
								{
									"id": 57,
									"name": "property",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 580,
										"name": "CSSStyleKey",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 58,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new value"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						50
					]
				},
				{
					"title": "Functions",
					"children": [
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/css.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/css.ts#L1"
				}
			]
		},
		{
			"id": 59,
			"name": "delegate",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 64,
					"name": "DelegateEvent",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L8"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Event"
								},
								"name": "Event",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 65,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 66,
											"name": "delegateTarget",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/web/src/delegate.ts",
													"line": 8,
													"character": 38,
													"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L8"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												66
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/web/src/delegate.ts",
											"line": 8,
											"character": 36,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L8"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 67,
					"name": "DelegateEventHandler",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 9,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L9"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 68,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/delegate.ts",
									"line": 9,
									"character": 35,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 69,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 70,
											"name": "e",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 64,
												"name": "DelegateEvent",
												"package": "@js-fns/web"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 71,
					"name": "DelegateRemoveFunction",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 10,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L10"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 72,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/delegate.ts",
									"line": 10,
									"character": 37,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L10"
								}
							],
							"signatures": [
								{
									"id": 73,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ReturnType"
										},
										"typeArguments": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"target": 376,
													"name": "off",
													"package": "@js-fns/web"
												}
											}
										],
										"name": "ReturnType",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 74,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 68,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L68"
						},
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L94"
						},
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 104,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L104"
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind a delegated event handler for one or more event names to document."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A function that removes the event selector handler again"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Bind to a single event\nconst removeDelegate = delegate('click', '.my-element', (e: Event) => {});\n\n// Bind to multiple events\nconst removeDelegates = delegate(['click', 'mouseenter'], '.my-element', (e: Event) => {});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/delegate.ts",
									"line": 68,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L68"
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 77,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS Selector that matches the element to delegate the event to"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 78,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 67,
										"name": "DelegateEventHandler",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 79,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOptions"
										},
										"name": "EventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 71,
								"name": "DelegateRemoveFunction",
								"package": "@js-fns/web"
							}
						},
						{
							"id": 80,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind a delegated event handler for one or more event names to a DOM element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A function that removes the event selector handler again"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Bind to a single event\nconst removeDelegate = delegate(element, 'click', '.my-element', (e: Event) => {});\n\n// Bind to multiple events\nconst removeDelegates = delegate(element, ['click', 'mouseenter'], '.my-element', (e: Event) => {});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/delegate.ts",
									"line": 94,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L94"
								}
							],
							"parameters": [
								{
									"id": 81,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventTarget"
										},
										"name": "EventTarget",
										"package": "typescript"
									}
								},
								{
									"id": 82,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 83,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS Selector that matches the element to delegate the event to"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 84,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 67,
										"name": "DelegateEventHandler",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 85,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOptions"
										},
										"name": "EventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 71,
								"name": "DelegateRemoveFunction",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "delegateHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/delegate.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "delegateHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a function that triggers the given handler if the current event target\nmatches the given selector"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The delegate event handler"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst handler = delegateHandler('.my-element', (e: Event) => {});\ndocument.addEventHandler('click', handler);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/delegate.ts",
									"line": 29,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 62,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS Selector that matches the element to delegate the event to"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 63,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to trigger if selector selector match"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 67,
										"name": "DelegateEventHandler",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventListener"
								},
								"name": "EventListener",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						64,
						67,
						71
					]
				},
				{
					"title": "Functions",
					"children": [
						74,
						60
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/delegate.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/delegate.ts#L1"
				}
			]
		},
		{
			"id": 86,
			"name": "domReady",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 89,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/domReady.ts",
							"line": 25,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/domReady.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 90,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Execute a given function once the document has finished loading"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ndomReady((e: Event) => { alert('DOM Ready') });\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/domReady.ts",
									"line": 25,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/domReady.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 91,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to execute once the document has finished loading"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 581,
										"name": "Noop",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "docComplete",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/domReady.ts",
							"line": 7,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/domReady.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "docComplete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/domReady.ts",
									"line": 7,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/domReady.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						89,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/domReady.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/domReady.ts#L1"
				}
			]
		},
		{
			"id": 92,
			"name": "elementData",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 95,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/elementData.ts",
							"line": 5,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elementData.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/elementData.ts",
									"line": 5,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elementData.ts#L5"
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									}
								},
								{
									"id": 98,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 99,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "resetCache",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/elementData.ts",
							"line": 3,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elementData.ts#L3"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "resetCache",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/elementData.ts",
									"line": 3,
									"character": 26,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elementData.ts#L3"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						95,
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/elementData.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elementData.ts#L1"
				}
			]
		},
		{
			"id": 100,
			"name": "elmIndex",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 101,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/elmIndex.ts",
							"line": 18,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elmIndex.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 102,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the index of a DOM element amongst its siblings"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The index of "
											},
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nelmIndex(someDiv);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/elmIndex.ts",
									"line": 18,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elmIndex.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 103,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to find the index of"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						101
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/elmIndex.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/elmIndex.ts#L1"
				}
			]
		},
		{
			"id": 104,
			"name": "ensureHTML",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 105,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/ensureHTML.ts",
							"line": 24,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/ensureHTML.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a string to see if it is already HTML otherwise it assumes\nis a selector and parses it to HTML"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The HTML string"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// String is already HTML so it is returned as is\nensureHTML('<div />');\n\n// String is a selector, to is is parsed before it is returned\nensureHTML('.my-div');\n// -> <div class=\"my-div\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/ensureHTML.ts",
									"line": 24,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/ensureHTML.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 107,
									"name": "htmlOrSelector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The string to parse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						105
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/ensureHTML.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/ensureHTML.ts#L1"
				}
			]
		},
		{
			"id": 108,
			"name": "eventOptionsSupported",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 109,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/eventOptionsSupported.ts",
							"line": 11,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/eventOptionsSupported.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 110,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Detect if options are supported by the add-/removeEventListener methods"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Are event binding options supported or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/eventOptionsSupported.ts",
									"line": 11,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/eventOptionsSupported.ts#L11"
								}
							],
							"parameters": [
								{
									"id": 111,
									"name": "recheck",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Force the function to check the support again"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						109
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/eventOptionsSupported.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/eventOptionsSupported.ts#L1"
				}
			]
		},
		{
			"id": 112,
			"name": "find",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 113,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/find.ts",
							"line": 18,
							"character": 10,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L18"
						},
						{
							"fileName": "packages/web/src/find.ts",
							"line": 29,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L29"
						},
						{
							"fileName": "packages/web/src/find.ts",
							"line": 36,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 114,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find elements by a given selector. The selector will be lightly analysed to determine\nthe appropriate "
									},
									{
										"kind": "code",
										"text": "`findByXX`"
									},
									{
										"kind": "text",
										"text": " function. This should be faster than just [running querySelector(All)\nto find elements](https://jsperf.com/queryselector-vs-selective-find/1)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/find.ts",
									"line": 18,
									"character": 1,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The selector to use"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "Element"
											},
											"name": "Element",
											"package": "typescript"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 116,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find elements by a given selector from a given element. The selector will be lightly analysed to determine\nthe appropriate "
									},
									{
										"kind": "code",
										"text": "`findByXX`"
									},
									{
										"kind": "text",
										"text": " function. This should be faster than just [running querySelector(All)\nto find elements](https://jsperf.com/queryselector-vs-selective-find/1)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/find.ts",
									"line": 29,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 117,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to start the search from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 118,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The selector to use"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "Element"
											},
											"name": "Element",
											"package": "typescript"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						113
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/find.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/find.ts#L1"
				}
			]
		},
		{
			"id": 119,
			"name": "findByClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 120,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findByClass.ts",
							"line": 18,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L18"
						},
						{
							"fileName": "packages/web/src/findByClass.ts",
							"line": 30,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L30"
						},
						{
							"fileName": "packages/web/src/findByClass.ts",
							"line": 37,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Finds DOM elements with a given class name.\nSeparate multiple selectors by comma. Separate multiple class names by space."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByClass.ts",
									"line": 18,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class name(s) to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						},
						{
							"id": 123,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Finds DOM elements with a given class name from a given element.\nSeparate multiple selectors by comma. Separate multiple class names by space."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByClass.ts",
									"line": 30,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 124,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to start the search from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 125,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class name(s) to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						120
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findByClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByClass.ts#L1"
				}
			]
		},
		{
			"id": 126,
			"name": "findById",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 127,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findById.ts",
							"line": 15,
							"character": 10,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L15"
						},
						{
							"fileName": "packages/web/src/findById.ts",
							"line": 23,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L23"
						},
						{
							"fileName": "packages/web/src/findById.ts",
							"line": 25,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find a DOM element with the given ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The found element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findById.ts",
									"line": 15,
									"character": 1,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 129,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID to find the element by"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 130,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find a DOM elements from a list of IDs"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The found elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findById.ts",
									"line": 23,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 131,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID to find the element by"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "HTMLElement"
									},
									"name": "HTMLElement",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						127
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findById.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findById.ts#L1"
				}
			]
		},
		{
			"id": 132,
			"name": "findByName",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 133,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findByName.ts",
							"line": 15,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByName.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find DOM elements with the given name"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByName.ts",
									"line": 15,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByName.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 135,
									"name": "names",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of name attribute to find the elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						133
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findByName.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByName.ts#L1"
				}
			]
		},
		{
			"id": 136,
			"name": "findByQuery",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 137,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findByQuery.ts",
							"line": 12,
							"character": 10,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L12"
						},
						{
							"fileName": "packages/web/src/findByQuery.ts",
							"line": 26,
							"character": 10,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L26"
						},
						{
							"fileName": "packages/web/src/findByQuery.ts",
							"line": 39,
							"character": 10,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L39"
						},
						{
							"fileName": "packages/web/src/findByQuery.ts",
							"line": 52,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L52"
						},
						{
							"fileName": "packages/web/src/findByQuery.ts",
							"line": 60,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find an element by given CSS selector"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByQuery.ts",
									"line": 12,
									"character": 1,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 139,
									"name": "queries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS selector to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 140,
									"name": "first",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return only the first found element"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 141,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find an element by a given CSS selector from within a given element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByQuery.ts",
									"line": 26,
									"character": 1,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L26"
								}
							],
							"parameters": [
								{
									"id": 142,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to start the search from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 143,
									"name": "queries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS selector to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 144,
									"name": "first",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return only the first found element"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 145,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find all elements matching a given CSS selector"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByQuery.ts",
									"line": 39,
									"character": 1,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L39"
								}
							],
							"parameters": [
								{
									"id": 146,
									"name": "queries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS selector to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 147,
									"name": "first",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return only the first found element"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": false
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						},
						{
							"id": 148,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find all elements matching a given CSS selector from within a given element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByQuery.ts",
									"line": 52,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L52"
								}
							],
							"parameters": [
								{
									"id": 149,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to start the search from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 150,
									"name": "queries",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS selector to find elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 151,
									"name": "first",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Return only the first found element"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": false
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						137
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findByQuery.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByQuery.ts#L1"
				}
			]
		},
		{
			"id": 152,
			"name": "findByTagName",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 153,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findByTagName.ts",
							"line": 18,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L18"
						},
						{
							"fileName": "packages/web/src/findByTagName.ts",
							"line": 29,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L29"
						},
						{
							"fileName": "packages/web/src/findByTagName.ts",
							"line": 36,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find elements by given tag name"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByTagName.ts",
									"line": 18,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 155,
									"name": "tagNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tag name to find the elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						},
						{
							"id": 156,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find elements by given tag name"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "List of found DOM elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findByTagName.ts",
									"line": 29,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 157,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to start the search from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 158,
									"name": "tagNames",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tag name to find the elements by"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						153
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findByTagName.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findByTagName.ts#L1"
				}
			]
		},
		{
			"id": 159,
			"name": "findUniqueNodeCollection",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 160,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/findUniqueNodeCollection.ts",
							"line": 23,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findUniqueNodeCollection.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Make a unique list of Elements from a list of selectors and and function to use that selector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The unique list of found elements"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst byClassName = (selector) => document.getElementsByClassName(selector)\n\n// Using a single selector\nfindUniqueNodeCollection('my-elements', byClassName);\n\n// Using multiple selectors\nfindUniqueNodeCollection(['my-elements', 'sone-other-elements'], byClassName);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/findUniqueNodeCollection.ts",
									"line": 23,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findUniqueNodeCollection.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 162,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The selector(s) to use with the given "
											},
											{
												"kind": "code",
												"text": "`findElements`"
											},
											{
												"kind": "text",
												"text": " function"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 163,
									"name": "findElements",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The function to find elements"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 164,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/web/src/findUniqueNodeCollection.ts",
													"line": 25,
													"character": 16,
													"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findUniqueNodeCollection.ts#L25"
												}
											],
											"signatures": [
												{
													"id": 165,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/web/src/findUniqueNodeCollection.ts",
															"line": 25,
															"character": 16,
															"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findUniqueNodeCollection.ts#L25"
														}
													],
													"parameters": [
														{
															"id": 166,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLCollectionOf"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																],
																"name": "HTMLCollectionOf",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "NodeListOf"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLElement"
																		},
																		"name": "HTMLElement",
																		"package": "typescript"
																	}
																],
																"name": "NodeListOf",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/findUniqueNodeCollection.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/findUniqueNodeCollection.ts#L1"
				}
			]
		},
		{
			"id": 167,
			"name": "getCurrentDocument",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 168,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/getCurrentDocument.ts",
							"line": 5,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentDocument.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/getCurrentDocument.ts",
									"line": 5,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentDocument.ts#L5"
								}
							],
							"parameters": [
								{
									"id": 170,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Document"
										},
										"name": "Document",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						168
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/getCurrentDocument.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentDocument.ts#L1"
				}
			]
		},
		{
			"id": 171,
			"name": "getCurrentWindow",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 172,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/getCurrentWindow.ts",
							"line": 8,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentWindow.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/getCurrentWindow.ts",
									"line": 8,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentWindow.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 174,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 584,
										"name": "GeneralWindow",
										"package": "@js-fns/web"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						172
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/getCurrentWindow.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/getCurrentWindow.ts#L1"
				}
			]
		},
		{
			"id": 175,
			"name": "hasClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 180,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/hasClass.ts",
							"line": 13,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hasClass.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 181,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Does all (or any) of the listed class names exist in the DOM elements list of class names"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "All/any class names listed were found in the elements list of class names"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/hasClass.ts",
									"line": 13,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hasClass.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 182,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 183,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class names to test"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 184,
									"name": "any",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Test if at least one class name exist"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 176,
					"name": "hasAnyClass",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/hasClass.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hasClass.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 177,
							"name": "hasAnyClass",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Does any of the listed class names exist in the DOM elements list of class names"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "At least one of the class names listed were found in the elements list of class names"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/hasClass.ts",
									"line": 35,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hasClass.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 178,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 179,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class names to test"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						180,
						176
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/hasClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hasClass.ts#L1"
				}
			]
		},
		{
			"id": 185,
			"name": "hidden",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 186,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/hidden.ts",
							"line": 15,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hidden.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if a given DOM element is technically hidden\n- Not is DOM\n- Collapsed\n- display: none\n- visibility: hidden."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is the element technically hidden or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/hidden.ts",
									"line": 15,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hidden.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 188,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						186
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/hidden.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/hidden.ts#L1"
				}
			]
		},
		{
			"id": 189,
			"name": "inDOM",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 190,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/inDOM.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inDOM.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given DOM node inserted into the DOM"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM node in the DOM or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/inDOM.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inDOM.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 192,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to check"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						190
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/inDOM.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inDOM.ts#L1"
				}
			]
		},
		{
			"id": 207,
			"name": "inView",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 208,
					"name": "PositionIndicator",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/inView.ts",
							"line": 6,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 209,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 211,
									"name": "above",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Above the viewport area?"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/web/src/inView.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 212,
									"name": "below",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Below the viewport area?"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/web/src/inView.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 210,
									"name": "inside",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inside the viewport area?"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/web/src/inView.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L8"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 213,
									"name": "left",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "To the left of the viewport area?"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/web/src/inView.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 214,
									"name": "right",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "To the right of the viewport area?"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/web/src/inView.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										211,
										212,
										210,
										213,
										214
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/inView.ts",
									"line": 6,
									"character": 32,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L6"
								}
							]
						}
					}
				},
				{
					"id": 215,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/inView.ts",
							"line": 47,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the element is in the area of the viewport or not."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object with indications of where the element is compared to the viewport area"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Element inside viewport\nconst { inside } = inView(myElement);\n// -> inside === true\n\n// Element outside viewport\nconst { inside, below } = inView(myElement);\n// -> inside === false; below === true\n\n// With a threshold\nconst { inside } = inView(myElement, 30);\n// -> inside === true\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/inView.ts",
									"line": 47,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L47"
								}
							],
							"parameters": [
								{
									"id": 217,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								},
								{
									"id": 218,
									"name": "threshold",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The distance to the edge of the viewport before\n                   the element is no longer inside in the viewport area,\n                   in pixels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": 208,
								"name": "PositionIndicator",
								"package": "@js-fns/web"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						208
					]
				},
				{
					"title": "Functions",
					"children": [
						215
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/inView.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/inView.ts#L1"
				}
			]
		},
		{
			"id": 193,
			"name": "innerXML",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 194,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/innerXML.ts",
							"line": 24,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/innerXML.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 195,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the inner XML structure as a string from a XML element\n(like innerHTML but for XML elements - eg. in SVG)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inner XML structure"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// String is already HTML so it is returned as is\ninnerXML(<svg><g><path /></g></svg>);\n// -> '<g><path /></g>'\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/innerXML.ts",
									"line": 24,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/innerXML.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 196,
									"name": "XMLElement",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						194
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/innerXML.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/innerXML.ts#L1"
				}
			]
		},
		{
			"id": 197,
			"name": "insertAfter",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 198,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/insertAfter.ts",
							"line": 16,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertAfter.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 199,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts DOM element or plain HTML after a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inserted element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/insertAfter.ts",
									"line": 16,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertAfter.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 200,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to insert elements after"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 201,
									"name": "insertElm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element or HTML (or selector) to insert"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						198
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/insertAfter.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertAfter.ts#L1"
				}
			]
		},
		{
			"id": 202,
			"name": "insertBefore",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 203,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/insertBefore.ts",
							"line": 16,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertBefore.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inserts DOM element or plain HTML before a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inserted element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/insertBefore.ts",
									"line": 16,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertBefore.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 205,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to insert elements before"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 206,
									"name": "insertElm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element or HTML (or selector) to insert"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						203
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/insertBefore.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/insertBefore.ts#L1"
				}
			]
		},
		{
			"id": 219,
			"name": "invisible",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 220,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/invisible.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/invisible.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if a given DOM element is invisible."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is the element invisible"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/invisible.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/invisible.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 222,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						220
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/invisible.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/invisible.ts#L1"
				}
			]
		},
		{
			"id": 223,
			"name": "isBlob",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 224,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isBlob.ts",
							"line": 7,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isBlob.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a Blob object"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a Blob object or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isBlob.ts",
									"line": 7,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isBlob.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 226,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Blob"
									},
									"name": "Blob",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						224
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isBlob.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isBlob.ts#L1"
				}
			]
		},
		{
			"id": 231,
			"name": "isDOMChildNode",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 232,
					"name": "ChildNodeWithParent",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 308,
							"name": "ATTRIBUTE_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16147,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 2
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.ATTRIBUTE_NODE"
							}
						},
						{
							"id": 310,
							"name": "CDATA_SECTION_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a CDATASection node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16151,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 4
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.CDATA_SECTION_NODE"
							}
						},
						{
							"id": 314,
							"name": "COMMENT_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a Comment node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16157,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 8
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.COMMENT_NODE"
							}
						},
						{
							"id": 317,
							"name": "DOCUMENT_FRAGMENT_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a DocumentFragment node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16163,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 11
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_FRAGMENT_NODE"
							}
						},
						{
							"id": 315,
							"name": "DOCUMENT_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a document."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16159,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 9
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_NODE"
							}
						},
						{
							"id": 323,
							"name": "DOCUMENT_POSITION_CONTAINED_BY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set when other is a descendant of node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16174,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 16
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_CONTAINED_BY"
							}
						},
						{
							"id": 322,
							"name": "DOCUMENT_POSITION_CONTAINS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set when other is an ancestor of node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16172,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 8
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_CONTAINS"
							}
						},
						{
							"id": 319,
							"name": "DOCUMENT_POSITION_DISCONNECTED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set when node and other are not in the same tree."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16166,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_DISCONNECTED"
							}
						},
						{
							"id": 321,
							"name": "DOCUMENT_POSITION_FOLLOWING",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set when other is following node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16170,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 4
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_FOLLOWING"
							}
						},
						{
							"id": 324,
							"name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16175,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 32
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
							}
						},
						{
							"id": 320,
							"name": "DOCUMENT_POSITION_PRECEDING",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set when other is preceding node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16168,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 2
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_POSITION_PRECEDING"
							}
						},
						{
							"id": 316,
							"name": "DOCUMENT_TYPE_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a doctype."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16161,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 10
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.DOCUMENT_TYPE_NODE"
							}
						},
						{
							"id": 307,
							"name": "ELEMENT_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16146,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.ELEMENT_NODE"
							}
						},
						{
							"id": 312,
							"name": "ENTITY_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16153,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 6
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.ENTITY_NODE"
							}
						},
						{
							"id": 311,
							"name": "ENTITY_REFERENCE_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16152,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 5
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.ENTITY_REFERENCE_NODE"
							}
						},
						{
							"id": 318,
							"name": "NOTATION_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16164,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 12
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.NOTATION_NODE"
							}
						},
						{
							"id": 313,
							"name": "PROCESSING_INSTRUCTION_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a ProcessingInstruction node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16155,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 7
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.PROCESSING_INSTRUCTION_NODE"
							}
						},
						{
							"id": 309,
							"name": "TEXT_NODE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "node is a Text node."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16149,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": 3
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.TEXT_NODE"
							}
						},
						{
							"id": 246,
							"name": "baseURI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16016,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.baseURI"
							}
						},
						{
							"id": 247,
							"name": "childNodes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16022,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "NodeListOf"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ChildNode"
										},
										"name": "ChildNode",
										"package": "typescript"
									}
								],
								"name": "NodeListOf",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.childNodes"
							}
						},
						{
							"id": 248,
							"name": "firstChild",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16028,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ChildNode"
										},
										"name": "ChildNode",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.firstChild"
							}
						},
						{
							"id": 249,
							"name": "isConnected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16034,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.isConnected"
							}
						},
						{
							"id": 250,
							"name": "lastChild",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16040,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ChildNode"
										},
										"name": "ChildNode",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.lastChild"
							}
						},
						{
							"id": 251,
							"name": "nextSibling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16046,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ChildNode"
										},
										"name": "ChildNode",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.nextSibling"
							}
						},
						{
							"id": 252,
							"name": "nodeName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16052,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.nodeName"
							}
						},
						{
							"id": 253,
							"name": "nodeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16058,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.nodeType"
							}
						},
						{
							"id": 254,
							"name": "nodeValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16060,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.nodeValue"
							}
						},
						{
							"id": 255,
							"name": "ownerDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16066,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Document"
										},
										"name": "Document",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.ownerDocument"
							}
						},
						{
							"id": 233,
							"name": "parentElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMChildNode.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L6"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.parentElement"
							}
						},
						{
							"id": 234,
							"name": "parentNode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMChildNode.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L7"
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ParentNode"
										},
										"name": "ParentNode",
										"package": "typescript"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.parentNode"
							}
						},
						{
							"id": 256,
							"name": "previousSibling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16084,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ChildNode"
										},
										"name": "ChildNode",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.previousSibling"
							}
						},
						{
							"id": 257,
							"name": "textContent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16086,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.textContent"
							}
						},
						{
							"id": 325,
							"name": "addEventListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 8168,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 326,
									"name": "addEventListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 8168,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 327,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 328,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "EventListenerOrEventListenerObject"
														},
														"name": "EventListenerOrEventListenerObject",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 329,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "AddEventListenerOptions"
														},
														"name": "AddEventListenerOptions",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.addEventListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.addEventListener"
							}
						},
						{
							"id": 235,
							"name": "after",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5555,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "after",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5555,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 237,
											"name": "nodes",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "Node"
															},
															"name": "Node",
															"package": "typescript"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.after"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.after"
							}
						},
						{
							"id": 258,
							"name": "appendChild",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16088,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "appendChild",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16088,
											"character": 4
										}
									],
									"typeParameter": [
										{
											"id": 260,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Node",
												"package": "typescript"
											}
										}
									],
									"parameters": [
										{
											"id": 261,
											"name": "node",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.appendChild"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.appendChild"
							}
						},
						{
							"id": 238,
							"name": "before",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5563,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "before",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5563,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 240,
											"name": "nodes",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "Node"
															},
															"name": "Node",
															"package": "typescript"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.before"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.before"
							}
						},
						{
							"id": 262,
							"name": "cloneNode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16094,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 263,
									"name": "cloneNode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16094,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 264,
											"name": "deep",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.cloneNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.cloneNode"
							}
						},
						{
							"id": 265,
							"name": "compareDocumentPosition",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16100,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 266,
									"name": "compareDocumentPosition",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16100,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 267,
											"name": "other",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.compareDocumentPosition"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.compareDocumentPosition"
							}
						},
						{
							"id": 268,
							"name": "contains",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16106,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 269,
									"name": "contains",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16106,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 270,
											"name": "other",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Node"
														},
														"name": "Node",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.contains"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.contains"
							}
						},
						{
							"id": 330,
							"name": "dispatchEvent",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 8174,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 331,
									"name": "dispatchEvent",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 8174,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 332,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Event"
												},
												"name": "Event",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.dispatchEvent"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.dispatchEvent"
							}
						},
						{
							"id": 271,
							"name": "getRootNode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16112,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 272,
									"name": "getRootNode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16112,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 273,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "GetRootNodeOptions"
												},
												"name": "GetRootNodeOptions",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.getRootNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.getRootNode"
							}
						},
						{
							"id": 274,
							"name": "hasChildNodes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16118,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "hasChildNodes",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16118,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.hasChildNodes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.hasChildNodes"
							}
						},
						{
							"id": 276,
							"name": "insertBefore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16120,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 277,
									"name": "insertBefore",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16120,
											"character": 4
										}
									],
									"typeParameter": [
										{
											"id": 278,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Node",
												"package": "typescript"
											}
										}
									],
									"parameters": [
										{
											"id": 279,
											"name": "node",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 280,
											"name": "child",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Node"
														},
														"name": "Node",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.insertBefore"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.insertBefore"
							}
						},
						{
							"id": 281,
							"name": "isDefaultNamespace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16122,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 282,
									"name": "isDefaultNamespace",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16122,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 283,
											"name": "namespace",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.isDefaultNamespace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.isDefaultNamespace"
							}
						},
						{
							"id": 284,
							"name": "isEqualNode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16128,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "isEqualNode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16128,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 286,
											"name": "otherNode",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Node"
														},
														"name": "Node",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.isEqualNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.isEqualNode"
							}
						},
						{
							"id": 287,
							"name": "isSameNode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16130,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "isSameNode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16130,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 289,
											"name": "otherNode",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Node"
														},
														"name": "Node",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.isSameNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.isSameNode"
							}
						},
						{
							"id": 290,
							"name": "lookupNamespaceURI",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "lookupNamespaceURI",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16132,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 292,
											"name": "prefix",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.lookupNamespaceURI"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.lookupNamespaceURI"
							}
						},
						{
							"id": 293,
							"name": "lookupPrefix",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16134,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 294,
									"name": "lookupPrefix",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16134,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 295,
											"name": "namespace",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.lookupPrefix"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.lookupPrefix"
							}
						},
						{
							"id": 296,
							"name": "normalize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16140,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 297,
									"name": "normalize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16140,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.normalize"
							}
						},
						{
							"id": 241,
							"name": "remove",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5569,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "remove",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5569,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.remove"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.remove"
							}
						},
						{
							"id": 298,
							"name": "removeChild",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16142,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 299,
									"name": "removeChild",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16142,
											"character": 4
										}
									],
									"typeParameter": [
										{
											"id": 300,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Node",
												"package": "typescript"
											}
										}
									],
									"parameters": [
										{
											"id": 301,
											"name": "child",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.removeChild"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.removeChild"
							}
						},
						{
							"id": 333,
							"name": "removeEventListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 8180,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 334,
									"name": "removeEventListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 8180,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 335,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 336,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "EventListenerOrEventListenerObject"
														},
														"name": "EventListenerOrEventListenerObject",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 337,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "EventListenerOptions"
														},
														"name": "EventListenerOptions",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.removeEventListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.removeEventListener"
							}
						},
						{
							"id": 302,
							"name": "replaceChild",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 303,
									"name": "replaceChild",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16144,
											"character": 4
										}
									],
									"typeParameter": [
										{
											"id": 304,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Node",
												"package": "typescript"
											}
										}
									],
									"parameters": [
										{
											"id": 305,
											"name": "node",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										},
										{
											"id": 306,
											"name": "child",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.replaceChild"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.replaceChild"
							}
						},
						{
							"id": 243,
							"name": "replaceWith",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5577,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 244,
									"name": "replaceWith",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5577,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 245,
											"name": "nodes",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "Node"
															},
															"name": "Node",
															"package": "typescript"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "ChildNode.replaceWith"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ChildNode.replaceWith"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								308,
								310,
								314,
								317,
								315,
								323,
								322,
								319,
								321,
								324,
								320,
								316,
								307,
								312,
								311,
								318,
								313,
								309,
								246,
								247,
								248,
								249,
								250,
								251,
								252,
								253,
								254,
								255,
								233,
								234,
								256,
								257
							]
						},
						{
							"title": "Methods",
							"children": [
								325,
								235,
								258,
								238,
								262,
								265,
								268,
								330,
								271,
								274,
								276,
								281,
								284,
								287,
								290,
								293,
								296,
								241,
								298,
								333,
								302,
								243
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/web/src/isDOMChildNode.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L5"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
								"qualifiedName": "ChildNode"
							},
							"name": "ChildNode",
							"package": "typescript"
						}
					]
				},
				{
					"id": 338,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMChildNode.ts",
							"line": 18,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a DOM node child of a DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM child node or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMChildNode.ts",
									"line": 18,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 340,
									"name": "node",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "node",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 232,
									"name": "ChildNodeWithParent",
									"package": "@js-fns/web"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						232
					]
				},
				{
					"title": "Functions",
					"children": [
						338
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMChildNode.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMChildNode.ts#L1"
				}
			]
		},
		{
			"id": 341,
			"name": "isDOMContainer",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 342,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMContainer.ts",
							"line": 12,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMContainer.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 343,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a DOM node that can contain child DOM nodes"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM container or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMContainer.ts",
									"line": 12,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMContainer.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 344,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						342
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMContainer.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMContainer.ts#L1"
				}
			]
		},
		{
			"id": 345,
			"name": "isDOMElement",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 346,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMElement.ts",
							"line": 10,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMElement.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a DOM element node and optionally of a given type"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM element node or not and optionally of the right type"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMElement.ts",
									"line": 10,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMElement.ts#L10"
								}
							],
							"parameters": [
								{
									"id": 348,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 349,
									"name": "tags",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tag name to match"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						346
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMElement.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMElement.ts#L1"
				}
			]
		},
		{
			"id": 350,
			"name": "isDOMFragment",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 351,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMFragment.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMFragment.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a Document Fragment"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a Document Fragment or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMFragment.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMFragment.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 353,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "DocumentFragment"
									},
									"name": "DocumentFragment",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						351
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMFragment.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMFragment.ts#L1"
				}
			]
		},
		{
			"id": 354,
			"name": "isDOMNode",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMNode.ts",
							"line": 7,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMNode.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a DOM Node"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM node or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMNode.ts",
									"line": 7,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMNode.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 357,
									"name": "node",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "node",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Node"
									},
									"name": "Node",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						355
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMNode.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMNode.ts#L1"
				}
			]
		},
		{
			"id": 358,
			"name": "isDOMRoot",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 359,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDOMRoot.ts",
							"line": 11,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMRoot.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 360,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object root node of the DOM"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it the root node of the DOM or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDOMRoot.ts",
									"line": 11,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMRoot.ts#L11"
								}
							],
							"parameters": [
								{
									"id": 361,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "HTMLElement"
									},
									"name": "HTMLElement",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						359
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDOMRoot.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDOMRoot.ts#L1"
				}
			]
		},
		{
			"id": 227,
			"name": "isDocument",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 228,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isDocument.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDocument.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a DOM document node"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a DOM document node or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isDocument.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDocument.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 230,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Document"
									},
									"name": "Document",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						228
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isDocument.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isDocument.ts#L1"
				}
			]
		},
		{
			"id": 362,
			"name": "isEventTarget",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 363,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isEventTarget.ts",
							"line": 7,
							"character": 0,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isEventTarget.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a viable event target (implements the addEventListener function)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it an Event Target or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isEventTarget.ts",
									"line": 7,
									"character": 15,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isEventTarget.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 365,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "EventTarget"
									},
									"name": "EventTarget",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						363
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isEventTarget.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isEventTarget.ts#L1"
				}
			]
		},
		{
			"id": 366,
			"name": "isWindow",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 367,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/isWindow.ts",
							"line": 11,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isWindow.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given object a Window object"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is it a Window object or not"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/isWindow.ts",
									"line": 11,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isWindow.ts#L11"
								}
							],
							"parameters": [
								{
									"id": 369,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 584,
									"name": "GeneralWindow",
									"package": "@js-fns/web"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						367
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/isWindow.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/isWindow.ts#L1"
				}
			]
		},
		{
			"id": 370,
			"name": "matches",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 371,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/matches.ts",
							"line": 27,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/matches.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether or not a DOM element matches a given CSS query selector"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether or not {elm} matched the selector"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/matches.ts",
									"line": 27,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/matches.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 373,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 374,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS selector {elm} should match"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/matches.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/matches.ts#L1"
				}
			]
		},
		{
			"id": 375,
			"name": "off",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 376,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/off.ts",
							"line": 15,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L15"
						},
						{
							"fileName": "packages/web/src/off.ts",
							"line": 30,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L30"
						},
						{
							"fileName": "packages/web/src/off.ts",
							"line": 38,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind an event handler for one or more event names on a given DOM element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/off.ts",
									"line": 15,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 378,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to bind the event to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventTarget"
										},
										"name": "EventTarget",
										"package": "typescript"
									}
								},
								{
									"id": 379,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 380,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 381,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'removeEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOptions"
										},
										"name": "EventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						},
						{
							"id": 382,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind an event handler for one or more event names to "
									},
									{
										"kind": "code",
										"text": "`document`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/off.ts",
									"line": 30,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 383,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 384,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 385,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'removeEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOptions"
										},
										"name": "EventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						376
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/off.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/off.ts#L1"
				}
			]
		},
		{
			"id": 386,
			"name": "on",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 387,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/on.ts",
							"line": 15,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L15"
						},
						{
							"fileName": "packages/web/src/on.ts",
							"line": 30,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L30"
						},
						{
							"fileName": "packages/web/src/on.ts",
							"line": 38,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 388,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind an event handler for one or more event names on a given DOM element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/on.ts",
									"line": 15,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 389,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to bind the event to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventTarget"
										},
										"name": "EventTarget",
										"package": "typescript"
									}
								},
								{
									"id": 390,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 391,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 392,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'addEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AddEventListenerOptions"
										},
										"name": "AddEventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						},
						{
							"id": 393,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind an event handler for one or more event names to "
									},
									{
										"kind": "code",
										"text": "`document`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`document`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/on.ts",
									"line": 30,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 394,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 395,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 396,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'addEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AddEventListenerOptions"
										},
										"name": "AddEventListenerOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						387
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/on.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/on.ts#L1"
				}
			]
		},
		{
			"id": 397,
			"name": "once",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 402,
					"name": "OnceEventListenerOptions",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/once.ts",
							"line": 10,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L10"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "AddEventListenerOptions"
								},
								"name": "AddEventListenerOptions",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 403,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 404,
											"name": "when",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A function that returns a boolean to determine when the event should trigger"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/web/src/once.ts",
													"line": 12,
													"character": 2,
													"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L12"
												}
											],
											"type": {
												"type": "reference",
												"target": 398,
												"name": "WhenFunction",
												"package": "@js-fns/web"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												404
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/web/src/once.ts",
											"line": 10,
											"character": 65,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L10"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 398,
					"name": "WhenFunction",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/once.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L8"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 399,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/once.ts",
									"line": 8,
									"character": 27,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 400,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 401,
											"name": "e",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Event"
												},
												"name": "Event",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 405,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/once.ts",
							"line": 65,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L65"
						},
						{
							"fileName": "packages/web/src/once.ts",
							"line": 81,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L81"
						},
						{
							"fileName": "packages/web/src/once.ts",
							"line": 89,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 406,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind a single fire event handler for one or more event names on a DOM element.\n(Add "
									},
									{
										"kind": "code",
										"text": "`when`"
									},
									{
										"kind": "text",
										"text": " to the options to conditional trigger the event)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A function to remove the handler again"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/once.ts",
									"line": 65,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 407,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to bind the event to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventTarget"
										},
										"name": "EventTarget",
										"package": "typescript"
									}
								},
								{
									"id": 408,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 409,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 410,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'addEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 402,
										"name": "OnceEventListenerOptions",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "query",
										"queryType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/once.ts",
												"qualifiedName": "bind"
											},
											"name": "bind",
											"package": "@js-fns/web"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						},
						{
							"id": 411,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind a single fire event handler for one or more event names on "
									},
									{
										"kind": "code",
										"text": "`document`"
									},
									{
										"kind": "text",
										"text": ".\n(Add "
									},
									{
										"kind": "code",
										"text": "`when`"
									},
									{
										"kind": "text",
										"text": " to the options to conditional trigger the event)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A function to remove the handler again"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/once.ts",
									"line": 81,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 412,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to bind the handler to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 413,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Handler to bind to the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventListenerOrEventListenerObject"
										},
										"name": "EventListenerOrEventListenerObject",
										"package": "typescript"
									}
								},
								{
									"id": 414,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass to the 'addEventListener'"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 402,
										"name": "OnceEventListenerOptions",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "query",
										"queryType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/once.ts",
												"qualifiedName": "bind"
											},
											"name": "bind",
											"package": "@js-fns/web"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						402,
						398
					]
				},
				{
					"title": "Functions",
					"children": [
						405
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/once.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/once.ts#L1"
				}
			]
		},
		{
			"id": 415,
			"name": "parseSelector",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 416,
					"name": "AttributeMapping",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/parseSelector.ts",
							"line": 10,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Set"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set",
								"package": "typescript"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 417,
					"name": "Attributes",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/parseSelector.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 418,
					"name": "SelectorParsing",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/parseSelector.ts",
							"line": 13,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L13"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 419,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 421,
									"name": "attributes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/parseSelector.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L15"
										}
									],
									"type": {
										"type": "reference",
										"target": 417,
										"name": "Attributes",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 420,
									"name": "tagName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/parseSelector.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										421,
										420
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/parseSelector.ts",
									"line": 13,
									"character": 30,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L13"
								}
							]
						}
					}
				},
				{
					"id": 422,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/parseSelector.ts",
							"line": 65,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 423,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a selector string into a structured object"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The attribute parsing mapping"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/parseSelector.ts",
									"line": 65,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 424,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CSS selector to parse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 418,
								"name": "SelectorParsing",
								"package": "@js-fns/web"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						416,
						417,
						418
					]
				},
				{
					"title": "Functions",
					"children": [
						422
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/parseSelector.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/parseSelector.ts#L1"
				}
			]
		},
		{
			"id": 425,
			"name": "position",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 432,
					"name": "PositionData",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 438,
							"name": "bottom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Position.bottom"
							}
						},
						{
							"id": 436,
							"name": "left",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Position.left"
							}
						},
						{
							"id": 433,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position relative to the offset parent"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L20"
								}
							],
							"type": {
								"type": "reference",
								"target": 426,
								"name": "Position",
								"package": "@js-fns/web"
							}
						},
						{
							"id": 437,
							"name": "right",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Position.right"
							}
						},
						{
							"id": 435,
							"name": "top",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Position.top"
							}
						},
						{
							"id": 434,
							"name": "viewport",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position relative to the viewport area"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": 426,
								"name": "Position",
								"package": "@js-fns/web"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								438,
								436,
								433,
								437,
								435,
								434
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/web/src/position.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 426,
							"name": "Position",
							"package": "@js-fns/web"
						}
					]
				},
				{
					"id": 426,
					"name": "Position",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/position.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L11"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 427,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 431,
									"name": "bottom",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/position.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 429,
									"name": "left",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/position.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 430,
									"name": "right",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/position.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 428,
									"name": "top",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/position.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										431,
										429,
										430,
										428
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 11,
									"character": 23,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L11"
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 432,
							"name": "PositionData"
						}
					]
				},
				{
					"id": 439,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/position.ts",
							"line": 91,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the current position of a DOM element, either relative to the offsetParent\nor relative to the document. If the element is the viewport or the window, the\nposition of the window is returned."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the position information of the element"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the position of the current window\nposition();\n\n// Get the position of the window of a given document\nposition(document);\nposition(document.documentElement);\nposition(document.body);\n\n// Get the position of a given element\nposition(someElement);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/position.ts",
									"line": 91,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L91"
								}
							],
							"parameters": [
								{
									"id": 441,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to find the position of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 426,
										"name": "Position",
										"package": "@js-fns/web"
									},
									{
										"type": "reference",
										"target": 432,
										"name": "PositionData",
										"package": "@js-fns/web"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						432
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						426
					]
				},
				{
					"title": "Functions",
					"children": [
						439
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/position.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/position.ts#L1"
				}
			]
		},
		{
			"id": 442,
			"name": "prepend",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 443,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/prepend.ts",
							"line": 14,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/prepend.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 444,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Append DOM element or plain HTML to the beginning of a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inserted child element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/prepend.ts",
									"line": 14,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/prepend.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 445,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element to append to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 446,
									"name": "insertElm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element or HTML (or selector) to append to insert"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						443
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/prepend.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/prepend.ts#L1"
				}
			]
		},
		{
			"id": 447,
			"name": "removeClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 448,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/removeClass.ts",
							"line": 8,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/removeClass.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 449,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove one or multiple class names from a DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns element given in 'elm'"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/removeClass.ts",
									"line": 8,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/removeClass.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 450,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "HTML ELement to remove class names from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 451,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class names to remove"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/removeClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/removeClass.ts#L1"
				}
			]
		},
		{
			"id": 452,
			"name": "replaceClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 453,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/replaceClass.ts",
							"line": 13,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceClass.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 454,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces css class with another on a DOM element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns element given in 'elm'"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/replaceClass.ts",
									"line": 13,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceClass.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 455,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "HTML ELement to remove class names from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 456,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class names to remove"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 457,
									"name": "replacements",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						453
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/replaceClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceClass.ts#L1"
				}
			]
		},
		{
			"id": 458,
			"name": "replaceNode",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 459,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/replaceNode.ts",
							"line": 15,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceNode.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 460,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace a given DOM element with another DOM element or plain HTML string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The value given in "
											},
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/replaceNode.ts",
									"line": 15,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceNode.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 461,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to replace"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									}
								},
								{
									"id": 462,
									"name": "replacement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element or plain HTML string to replace {elm}"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Node"
										},
										"name": "Node",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						459
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/replaceNode.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/replaceNode.ts#L1"
				}
			]
		},
		{
			"id": 463,
			"name": "saveFile",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 466,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/saveFile.ts",
							"line": 30,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/saveFile.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 467,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a file with given content and triggers download.\n(if the browser doesn't support file downloads, this method does nothing)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/saveFile.ts",
									"line": 30,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/saveFile.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 468,
									"name": "content",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The content of the file"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Blob"
												},
												"name": "Blob",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 469,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name to give the downloaded file"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 470,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The content type of the file"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'text/plain; charset=utf-8'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 464,
					"name": "fileSavingSupported",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/saveFile.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/saveFile.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "fileSavingSupported",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/saveFile.ts",
									"line": 16,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/saveFile.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						466,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/saveFile.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/saveFile.ts#L1"
				}
			]
		},
		{
			"id": 471,
			"name": "scrollInfo",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 472,
					"name": "ScrollInfo",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/scrollInfo.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L8"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 473,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 474,
									"name": "x",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L9"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 476,
									"name": "xMax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 478,
									"name": "xPct",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 475,
									"name": "y",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 477,
									"name": "yMax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 479,
									"name": "yPct",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/scrollInfo.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										474,
										476,
										478,
										475,
										477,
										479
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/scrollInfo.ts",
									"line": 8,
									"character": 25,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L8"
								}
							]
						}
					}
				},
				{
					"id": 480,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/scrollInfo.ts",
							"line": 25,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 481,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gather the current scroll position information of a DOM element or the window"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The scroll information"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/scrollInfo.ts",
									"line": 25,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 482,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element to find the scrolling position from"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									},
									"defaultValue": "window"
								}
							],
							"type": {
								"type": "reference",
								"target": 472,
								"name": "ScrollInfo",
								"package": "@js-fns/web"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						472
					]
				},
				{
					"title": "Functions",
					"children": [
						480
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/scrollInfo.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollInfo.ts#L1"
				}
			]
		},
		{
			"id": 483,
			"name": "scrollParent",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 484,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/scrollParent.ts",
							"line": 12,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollParent.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the parent element that has scrolling"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The scroll parent or the viewport"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/scrollParent.ts",
									"line": 12,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollParent.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 486,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The element whose scroll parent is determined"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						484
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/scrollParent.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/scrollParent.ts#L1"
				}
			]
		},
		{
			"id": 487,
			"name": "selectorToHTML",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 488,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/selectorToHTML.ts",
							"line": 23,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/selectorToHTML.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 489,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a given CSS selector into HTML\n(No this is not an Emmet substitute, so it is limited to only one element)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The parsed HTML"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nselectorToHTML('#id.class-name');\n// -> '<div id=\"id\" class=\"class-name\" />'\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/selectorToHTML.ts",
									"line": 23,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/selectorToHTML.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 490,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CSS selector to convert"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						488
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/selectorToHTML.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/selectorToHTML.ts#L1"
				}
			]
		},
		{
			"id": 491,
			"name": "siblings",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 498,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/siblings.ts",
							"line": 72,
							"character": 0,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 499,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all sibling elements of a given DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Collection of sibling elements"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsiblings(someElement);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/siblings.ts",
									"line": 6,
									"character": 55,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L6"
								}
							],
							"parameters": [
								{
									"id": 500,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to find siblings of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				},
				{
					"id": 495,
					"name": "nextSiblings",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/siblings.ts",
							"line": 58,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 496,
							"name": "nextSiblings",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all sibling elements after a given DOM element in the structure"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Collection of sibling elements"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nnextSiblings(someElement);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/siblings.ts",
									"line": 6,
									"character": 55,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L6"
								}
							],
							"parameters": [
								{
									"id": 497,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to find siblings of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				},
				{
					"id": 492,
					"name": "previousSiblings",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/siblings.ts",
							"line": 44,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 493,
							"name": "previousSiblings",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all sibling elements before a given DOM element in the structure"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Collection of sibling elements"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\npreviousSiblings(someElement);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/siblings.ts",
									"line": 6,
									"character": 55,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L6"
								}
							],
							"parameters": [
								{
									"id": 494,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to find siblings of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Node"
												},
												"name": "Node",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "Element"
									},
									"name": "Element",
									"package": "typescript"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						498,
						495,
						492
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/siblings.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/siblings.ts#L1"
				}
			]
		},
		{
			"id": 501,
			"name": "size",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 514,
					"name": "SizeType",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 519,
							"name": "CONTENT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size excluding borders, margins and padding"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L26"
								}
							],
							"type": {
								"type": "literal",
								"value": "content"
							}
						},
						{
							"id": 518,
							"name": "CONTENT_BOX",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size of the content (scrollable area minus padding)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L24"
								}
							],
							"type": {
								"type": "literal",
								"value": "content-box"
							}
						},
						{
							"id": 517,
							"name": "INNER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size excluding borders and margins"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L22"
								}
							],
							"type": {
								"type": "literal",
								"value": "inner"
							}
						},
						{
							"id": 515,
							"name": "MARGIN_BOX",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size including margins and borders"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L18"
								}
							],
							"type": {
								"type": "literal",
								"value": "margin-box"
							}
						},
						{
							"id": 516,
							"name": "OUTER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size including borders"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": "outer"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								519,
								518,
								517,
								515,
								516
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 16,
							"character": 18,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L16"
						}
					]
				},
				{
					"id": 510,
					"name": "Size",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 9,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L9"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 511,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 513,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/size.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 512,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/size.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										513,
										512
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 9,
									"character": 19,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L9"
								}
							]
						}
					}
				},
				{
					"id": 532,
					"name": "contentBoxSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 187,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L187"
						}
					],
					"signatures": [
						{
							"id": 533,
							"name": "contentBoxSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of a DOM element or window excluding borders, margins and padding"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 187,
									"character": 30,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L187"
								}
							],
							"parameters": [
								{
									"id": 534,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 529,
					"name": "contentSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 177,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L177"
						}
					],
					"signatures": [
						{
							"id": 530,
							"name": "contentSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of the content (scrollable area minus padding) of a DOM element or window"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 177,
									"character": 27,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L177"
								}
							],
							"parameters": [
								{
									"id": 531,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 535,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 102,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L102"
						},
						{
							"fileName": "packages/web/src/size.ts",
							"line": 121,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L121"
						},
						{
							"fileName": "packages/web/src/size.ts",
							"line": 123,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 536,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of the current Window."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the outer size the window\nsize();\n\n// Get a specific size model of window\nsize(SizeType.MARGIN_BOX);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 102,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 537,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "What type of size has to be computed. See "
											},
											{
												"kind": "code",
												"text": "`sizeType`"
											},
											{
												"kind": "text",
												"text": " for further details"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 514,
										"name": "SizeType",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						},
						{
							"id": 538,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of a DOM element or a Window instance."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the outer size af given element\nsize(someElement);\n\n// Get a specific size model of a given element\nsize(someElement, SizeType.MARGIN_BOX);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 121,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 539,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								},
								{
									"id": 540,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "What type of size has to be computed. See "
											},
											{
												"kind": "code",
												"text": "`sizeType`"
											},
											{
												"kind": "text",
												"text": " for further details"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 514,
										"name": "SizeType",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 502,
					"name": "elmSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 503,
							"name": "elmSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 31,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 504,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								},
								{
									"id": 505,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 514,
										"name": "SizeType",
										"package": "@js-fns/web"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 526,
					"name": "innerSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 167,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 527,
							"name": "innerSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of a DOM element or window excluding borders and margins"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 167,
									"character": 25,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L167"
								}
							],
							"parameters": [
								{
									"id": 528,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 520,
					"name": "marginBoxSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 147,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L147"
						}
					],
					"signatures": [
						{
							"id": 521,
							"name": "marginBoxSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of a DOM element or window including margins and borders"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 147,
									"character": 29,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L147"
								}
							],
							"parameters": [
								{
									"id": 522,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 523,
					"name": "outerSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 157,
							"character": 13,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L157"
						}
					],
					"signatures": [
						{
							"id": 524,
							"name": "outerSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find the size of a DOM element or window including borders"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Object describing width and height of the element"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 157,
									"character": 25,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L157"
								}
							],
							"parameters": [
								{
									"id": 525,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The DOM element (or window) to find the size of"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				},
				{
					"id": 506,
					"name": "windowSize",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/size.ts",
							"line": 77,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "windowSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/size.ts",
									"line": 77,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L77"
								}
							],
							"parameters": [
								{
									"id": 508,
									"name": "win",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 584,
										"name": "GeneralWindow",
										"package": "@js-fns/web"
									},
									"defaultValue": "window"
								},
								{
									"id": 509,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 514,
										"name": "SizeType",
										"package": "@js-fns/web"
									},
									"defaultValue": "SizeType.OUTER"
								}
							],
							"type": {
								"type": "reference",
								"target": 510,
								"name": "Size",
								"package": "@js-fns/web"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						514
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						510
					]
				},
				{
					"title": "Functions",
					"children": [
						532,
						529,
						535,
						502,
						526,
						520,
						523,
						506
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/size.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/size.ts#L1"
				}
			]
		},
		{
			"id": 541,
			"name": "supportsCSS",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 546,
					"name": "PrefixedPropMatch",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/supportsCSS.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L11"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 547,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 550,
									"name": "prefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/supportsCSS.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 548,
									"name": "prop",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/supportsCSS.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 549,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/supportsCSS.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										550,
										548,
										549
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/supportsCSS.ts",
									"line": 11,
									"character": 32,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L11"
								}
							]
						}
					}
				},
				{
					"id": 551,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/supportsCSS.ts",
							"line": 38,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 552,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Detect wether or not the given css property (and/or) value is supported by\nthe current browser"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns object if property is supported with prefix, otherwise a boolean is returned"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/supportsCSS.ts",
									"line": 38,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L38"
								}
							],
							"parameters": [
								{
									"id": 553,
									"name": "prop",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Property to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 580,
										"name": "CSSStyleKey",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 554,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to test with the property"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 546,
										"name": "PrefixedPropMatch",
										"package": "@js-fns/web"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					]
				},
				{
					"id": 542,
					"name": "supportsProp",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/supportsCSS.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 543,
							"name": "supportsProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/supportsCSS.ts",
									"line": 19,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L19"
								}
							],
							"parameters": [
								{
									"id": 544,
									"name": "prop",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 580,
										"name": "CSSStyleKey",
										"package": "@js-fns/web"
									}
								},
								{
									"id": 545,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						546
					]
				},
				{
					"title": "Functions",
					"children": [
						551,
						542
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/supportsCSS.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/supportsCSS.ts#L1"
				}
			]
		},
		{
			"id": 555,
			"name": "toDOM",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 556,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/toDOM.ts",
							"line": 25,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toDOM.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert HTML into DOM node(s)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "DOM elements that the HTML represented"
											}
										]
									},
									{
										"tag": "@remarks",
										"content": [
											{
												"kind": "text",
												"text": "To keep the method simple and short, this method uses the "
											},
											{
												"kind": "code",
												"text": "`<template />`"
											},
											{
												"kind": "text",
												"text": "\nelement to convert the HTML. For older browsers, either\nuse a polyfill like "
											},
											{
												"kind": "code",
												"text": "`@webcomponents/template`"
											},
											{
												"kind": "text",
												"text": " or a more elaborate HTML parser\n(like "
											},
											{
												"kind": "code",
												"text": "`parsehtml`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`html-parser`"
											},
											{
												"kind": "text",
												"text": ")"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// HTML is returned as is, as it cannot be parsed easily\ntoDOM('<html><body><div /></body></html>');\n\n// Convert a given HTML string to HTML\ntoDOM('<div><a>link</a></div>')\n// -> <div><a>link</a></div>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/toDOM.ts",
									"line": 25,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toDOM.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 558,
									"name": "html",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "HTML string to transform into nodes"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLCollection"
										},
										"name": "HTMLCollection",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						556
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/toDOM.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toDOM.ts#L1"
				}
			]
		},
		{
			"id": 559,
			"name": "toggleClass",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 560,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/toggleClass.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleClass.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 561,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Toggles (add/remove) one or multiple class names on a DOM element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The given "
											},
											{
												"kind": "code",
												"text": "`elm`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/toggleClass.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleClass.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 562,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to toggle class names from"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 563,
									"name": "classNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Class names to toggle"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 564,
									"name": "force",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Force to add/remove the given class names (true = add, false = remove)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						560
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/toggleClass.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleClass.ts#L1"
				}
			]
		},
		{
			"id": 565,
			"name": "toggleFullscreen",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 566,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/toggleFullscreen.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleFullscreen.ts#L1"
						}
					],
					"signatures": [
						{
							"id": 567,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/toggleFullscreen.ts",
									"line": 1,
									"character": 15,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleFullscreen.ts#L1"
								}
							],
							"parameters": [
								{
									"id": 568,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									"defaultValue": "document.documentElement"
								},
								{
									"id": 569,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "FullscreenOptions"
										},
										"name": "FullscreenOptions",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						566
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/toggleFullscreen.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/toggleFullscreen.ts#L1"
				}
			]
		},
		{
			"id": 570,
			"name": "trigger",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 571,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/trigger.ts",
							"line": 21,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L21"
						},
						{
							"fileName": "packages/web/src/trigger.ts",
							"line": 34,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L34"
						},
						{
							"fileName": "packages/web/src/trigger.ts",
							"line": 41,
							"character": 9,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L41"
						}
					],
					"signatures": [
						{
							"id": 572,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Trigger one or more events on a given DOM element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The 'elm' (or document)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/trigger.ts",
									"line": 21,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L21"
								}
							],
							"parameters": [
								{
									"id": 573,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to trigger the event on"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventTarget"
										},
										"name": "EventTarget",
										"package": "typescript"
									}
								},
								{
									"id": 574,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to trigger"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 575,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Extra data to add to the triggered event"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						},
						{
							"id": 576,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Trigger one or more events on Document."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The 'elm' (or document)"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/trigger.ts",
									"line": 34,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L34"
								}
							],
							"parameters": [
								{
									"id": 577,
									"name": "eventNames",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event names to trigger"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 578,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Extra data to add to the triggered event"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						571
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/trigger.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/trigger.ts#L1"
				}
			]
		},
		{
			"id": 579,
			"name": "types",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 580,
					"name": "CSSStyleKey",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/types.d.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/types.d.ts#L1"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "CSSStyleDeclaration"
											},
											"name": "CSSStyleDeclaration",
											"package": "typescript"
										}
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Exclude",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "getPropertyPriority"
									},
									{
										"type": "literal",
										"value": "getPropertyValue"
									},
									{
										"type": "literal",
										"value": "item"
									},
									{
										"type": "literal",
										"value": "removeProperty"
									},
									{
										"type": "literal",
										"value": "setProperty"
									},
									{
										"type": "literal",
										"value": "length"
									},
									{
										"type": "literal",
										"value": "parentRule"
									}
								]
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				},
				{
					"id": 584,
					"name": "GeneralWindow",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/types.d.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/types.d.ts#L8"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							},
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "window"
									},
									"name": "window",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 581,
					"name": "Noop",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/types.d.ts",
							"line": 6,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/types.d.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 582,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/types.d.ts",
									"line": 6,
									"character": 19,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/types.d.ts#L6"
								}
							],
							"signatures": [
								{
									"id": 583,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						580,
						584,
						581
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/types.d.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/types.d.ts#L1"
				}
			]
		},
		{
			"id": 585,
			"name": "vendorPrefixed",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 586,
					"name": "VendorPrefixing",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/vendorPrefixed.ts",
							"line": 6,
							"character": 12,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 587,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 590,
									"name": "css",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/vendorPrefixed.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L9"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 589,
									"name": "js",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/vendorPrefixed.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L8"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 588,
									"name": "prefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/web/src/vendorPrefixed.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L7"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "webkit"
											},
											{
												"type": "literal",
												"value": "moz"
											},
											{
												"type": "literal",
												"value": "ms"
											},
											{
												"type": "literal",
												"value": "o"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										590,
										589,
										588
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/web/src/vendorPrefixed.ts",
									"line": 6,
									"character": 30,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L6"
								}
							]
						}
					}
				},
				{
					"id": 591,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/vendorPrefixed.ts",
							"line": 20,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L20"
						}
					],
					"signatures": [
						{
							"id": 592,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add vendor prefixes to a string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Array of the various vendor vendorPrefixed versions of the string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/vendorPrefixed.ts",
									"line": 20,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L20"
								}
							],
							"parameters": [
								{
									"id": 593,
									"name": "str",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "String to add vendor prefixes to"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 586,
									"name": "VendorPrefixing",
									"package": "@js-fns/web"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						586
					]
				},
				{
					"title": "Functions",
					"children": [
						591
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/vendorPrefixed.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/vendorPrefixed.ts#L1"
				}
			]
		},
		{
			"id": 594,
			"name": "viewport",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 595,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/viewport.ts",
							"line": 26,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/viewport.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 596,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the current viewport element (scrolling element) of the current document, from a given element"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The viewport element"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the viewport of the current document\nviewport();\n\n// Get the viewport of the current window\nviewport(window);\n\n// Get the viewport of a given element\nviewport(someElementInSomeDocument);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/viewport.ts",
									"line": 26,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/viewport.ts#L26"
								}
							],
							"parameters": [
								{
									"id": 597,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Document"
												},
												"name": "Document",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 584,
												"name": "GeneralWindow",
												"package": "@js-fns/web"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						595
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/viewport.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/viewport.ts#L1"
				}
			]
		},
		{
			"id": 598,
			"name": "visible",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 599,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/visible.ts",
							"line": 9,
							"character": 24,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/visible.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 600,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if a given DOM element is visible."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Is the element visible for the user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/web/src/visible.ts",
									"line": 9,
									"character": 0,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/visible.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 601,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "DOM element to test"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						599
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/visible.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/visible.ts#L1"
				}
			]
		},
		{
			"id": 602,
			"name": "wrap",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 603,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/web/src/wrap.ts",
							"line": 8,
							"character": 0,
							"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/wrap.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 604,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/web/src/wrap.ts",
									"line": 8,
									"character": 15,
									"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/wrap.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 605,
									"name": "elm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									}
								},
								{
									"id": 606,
									"name": "html",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Element"
								},
								"name": "Element",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						603
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/web/src/wrap.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Tokimon/js-fns/blob/092c6fd/packages/web/src/wrap.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				6,
				11,
				17,
				32,
				36,
				45,
				49,
				59,
				86,
				92,
				100,
				104,
				108,
				112,
				119,
				126,
				132,
				136,
				152,
				159,
				167,
				171,
				175,
				185,
				189,
				207,
				193,
				197,
				202,
				219,
				223,
				231,
				341,
				345,
				350,
				354,
				358,
				227,
				362,
				366,
				370,
				375,
				386,
				397,
				415,
				425,
				442,
				447,
				452,
				458,
				463,
				471,
				483,
				487,
				491,
				501,
				541,
				555,
				559,
				565,
				570,
				579,
				585,
				594,
				598,
				602
			]
		}
	],
	"packageName": "@js-fns/web",
	"symbolIdMap": {
		"1": {
			"sourceFileName": "src/addClass.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "src/addClass.ts",
			"qualifiedName": "default"
		},
		"3": {
			"sourceFileName": "src/addClass.ts",
			"qualifiedName": "default"
		},
		"4": {
			"sourceFileName": "src/addClass.ts",
			"qualifiedName": "elm"
		},
		"5": {
			"sourceFileName": "src/addClass.ts",
			"qualifiedName": "classNames"
		},
		"6": {
			"sourceFileName": "src/append.ts",
			"qualifiedName": ""
		},
		"7": {
			"sourceFileName": "src/append.ts",
			"qualifiedName": "default"
		},
		"8": {
			"sourceFileName": "src/append.ts",
			"qualifiedName": "default"
		},
		"9": {
			"sourceFileName": "src/append.ts",
			"qualifiedName": "elm"
		},
		"10": {
			"sourceFileName": "src/append.ts",
			"qualifiedName": "insertElm"
		},
		"11": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": ""
		},
		"12": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": "default"
		},
		"13": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": "default"
		},
		"14": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": "elm"
		},
		"15": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": "attrName"
		},
		"16": {
			"sourceFileName": "src/attr.ts",
			"qualifiedName": "value"
		},
		"17": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": ""
		},
		"18": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "BoxModelSectionMapping"
		},
		"19": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type"
		},
		"20": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.top"
		},
		"21": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.left"
		},
		"22": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.bottom"
		},
		"23": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.right"
		},
		"24": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "BoxModelMapping"
		},
		"25": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type"
		},
		"26": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.margin"
		},
		"27": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.padding"
		},
		"28": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "__type.border"
		},
		"29": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "default"
		},
		"30": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "default"
		},
		"31": {
			"sourceFileName": "src/boxModel.ts",
			"qualifiedName": "elm"
		},
		"32": {
			"sourceFileName": "src/children.ts",
			"qualifiedName": ""
		},
		"33": {
			"sourceFileName": "src/children.ts",
			"qualifiedName": "default"
		},
		"34": {
			"sourceFileName": "src/children.ts",
			"qualifiedName": "default"
		},
		"35": {
			"sourceFileName": "src/children.ts",
			"qualifiedName": "elm"
		},
		"36": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": ""
		},
		"37": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "cnObj"
		},
		"38": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "__type.__index"
		},
		"41": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "Option"
		},
		"42": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "classNames"
		},
		"43": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "classNames"
		},
		"44": {
			"sourceFileName": "src/classNames.ts",
			"qualifiedName": "args"
		},
		"45": {
			"sourceFileName": "src/create.ts",
			"qualifiedName": ""
		},
		"46": {
			"sourceFileName": "src/create.ts",
			"qualifiedName": "default"
		},
		"47": {
			"sourceFileName": "src/create.ts",
			"qualifiedName": "default"
		},
		"48": {
			"sourceFileName": "src/create.ts",
			"qualifiedName": "selector"
		},
		"49": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": ""
		},
		"50": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "CSSStyleProperties"
		},
		"51": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "css"
		},
		"52": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "css"
		},
		"53": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "elm"
		},
		"54": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "style"
		},
		"55": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "css"
		},
		"56": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "elm"
		},
		"57": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "property"
		},
		"58": {
			"sourceFileName": "src/css.ts",
			"qualifiedName": "value"
		},
		"59": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": ""
		},
		"60": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "delegateHandler"
		},
		"61": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "delegateHandler"
		},
		"62": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "selector"
		},
		"63": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "handler"
		},
		"64": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "DelegateEvent"
		},
		"65": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type.delegateTarget"
		},
		"67": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "DelegateEventHandler"
		},
		"68": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type"
		},
		"69": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type"
		},
		"70": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "e"
		},
		"71": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "DelegateRemoveFunction"
		},
		"72": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type"
		},
		"73": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "delegate"
		},
		"75": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "delegate"
		},
		"76": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "eventNames"
		},
		"77": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "selector"
		},
		"78": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "handler"
		},
		"79": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "options"
		},
		"80": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "delegate"
		},
		"81": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "target"
		},
		"82": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "eventNames"
		},
		"83": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "selector"
		},
		"84": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "handler"
		},
		"85": {
			"sourceFileName": "src/delegate.ts",
			"qualifiedName": "options"
		},
		"86": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": ""
		},
		"87": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": "docComplete"
		},
		"88": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": "docComplete"
		},
		"89": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": "default"
		},
		"90": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": "default"
		},
		"91": {
			"sourceFileName": "src/domReady.ts",
			"qualifiedName": "handler"
		},
		"92": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": ""
		},
		"93": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "resetCache"
		},
		"94": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "resetCache"
		},
		"95": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "default"
		},
		"96": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "default"
		},
		"97": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "elm"
		},
		"98": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "key"
		},
		"99": {
			"sourceFileName": "src/elementData.ts",
			"qualifiedName": "data"
		},
		"100": {
			"sourceFileName": "src/elmIndex.ts",
			"qualifiedName": ""
		},
		"101": {
			"sourceFileName": "src/elmIndex.ts",
			"qualifiedName": "default"
		},
		"102": {
			"sourceFileName": "src/elmIndex.ts",
			"qualifiedName": "default"
		},
		"103": {
			"sourceFileName": "src/elmIndex.ts",
			"qualifiedName": "elm"
		},
		"104": {
			"sourceFileName": "src/ensureHTML.ts",
			"qualifiedName": ""
		},
		"105": {
			"sourceFileName": "src/ensureHTML.ts",
			"qualifiedName": "default"
		},
		"106": {
			"sourceFileName": "src/ensureHTML.ts",
			"qualifiedName": "default"
		},
		"107": {
			"sourceFileName": "src/ensureHTML.ts",
			"qualifiedName": "htmlOrSelector"
		},
		"108": {
			"sourceFileName": "src/eventOptionsSupported.ts",
			"qualifiedName": ""
		},
		"109": {
			"sourceFileName": "src/eventOptionsSupported.ts",
			"qualifiedName": "default"
		},
		"110": {
			"sourceFileName": "src/eventOptionsSupported.ts",
			"qualifiedName": "default"
		},
		"111": {
			"sourceFileName": "src/eventOptionsSupported.ts",
			"qualifiedName": "recheck"
		},
		"112": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": ""
		},
		"113": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "find"
		},
		"114": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "find"
		},
		"115": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "selector"
		},
		"116": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "find"
		},
		"117": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "elm"
		},
		"118": {
			"sourceFileName": "src/find.ts",
			"qualifiedName": "selector"
		},
		"119": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": ""
		},
		"120": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "findByClass"
		},
		"121": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "findByClass"
		},
		"122": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "classNames"
		},
		"123": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "findByClass"
		},
		"124": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "elm"
		},
		"125": {
			"sourceFileName": "src/findByClass.ts",
			"qualifiedName": "classNames"
		},
		"126": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": ""
		},
		"127": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": "findById"
		},
		"128": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": "findById"
		},
		"129": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": "ids"
		},
		"130": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": "findById"
		},
		"131": {
			"sourceFileName": "src/findById.ts",
			"qualifiedName": "ids"
		},
		"132": {
			"sourceFileName": "src/findByName.ts",
			"qualifiedName": ""
		},
		"133": {
			"sourceFileName": "src/findByName.ts",
			"qualifiedName": "default"
		},
		"134": {
			"sourceFileName": "src/findByName.ts",
			"qualifiedName": "default"
		},
		"135": {
			"sourceFileName": "src/findByName.ts",
			"qualifiedName": "names"
		},
		"136": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": ""
		},
		"137": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "findByQuery"
		},
		"138": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "findByQuery"
		},
		"139": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "queries"
		},
		"140": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "first"
		},
		"141": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "findByQuery"
		},
		"142": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "elm"
		},
		"143": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "queries"
		},
		"144": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "first"
		},
		"145": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "findByQuery"
		},
		"146": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "queries"
		},
		"147": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "first"
		},
		"148": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "findByQuery"
		},
		"149": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "elm"
		},
		"150": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "queries"
		},
		"151": {
			"sourceFileName": "src/findByQuery.ts",
			"qualifiedName": "first"
		},
		"152": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": ""
		},
		"153": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "findByTagName"
		},
		"154": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "findByTagName"
		},
		"155": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "tagNames"
		},
		"156": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "findByTagName"
		},
		"157": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "elm"
		},
		"158": {
			"sourceFileName": "src/findByTagName.ts",
			"qualifiedName": "tagNames"
		},
		"159": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": ""
		},
		"160": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "default"
		},
		"161": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "default"
		},
		"162": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "selector"
		},
		"163": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "findElements"
		},
		"164": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "__type"
		},
		"165": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "__type"
		},
		"166": {
			"sourceFileName": "src/findUniqueNodeCollection.ts",
			"qualifiedName": "name"
		},
		"167": {
			"sourceFileName": "src/getCurrentDocument.ts",
			"qualifiedName": ""
		},
		"168": {
			"sourceFileName": "src/getCurrentDocument.ts",
			"qualifiedName": "default"
		},
		"169": {
			"sourceFileName": "src/getCurrentDocument.ts",
			"qualifiedName": "default"
		},
		"170": {
			"sourceFileName": "src/getCurrentDocument.ts",
			"qualifiedName": "obj"
		},
		"171": {
			"sourceFileName": "src/getCurrentWindow.ts",
			"qualifiedName": ""
		},
		"172": {
			"sourceFileName": "src/getCurrentWindow.ts",
			"qualifiedName": "default"
		},
		"173": {
			"sourceFileName": "src/getCurrentWindow.ts",
			"qualifiedName": "default"
		},
		"174": {
			"sourceFileName": "src/getCurrentWindow.ts",
			"qualifiedName": "obj"
		},
		"175": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": ""
		},
		"176": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "hasAnyClass"
		},
		"177": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "hasAnyClass"
		},
		"178": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "elm"
		},
		"179": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "classNames"
		},
		"180": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "hasClass"
		},
		"181": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "hasClass"
		},
		"182": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "elm"
		},
		"183": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "classNames"
		},
		"184": {
			"sourceFileName": "src/hasClass.ts",
			"qualifiedName": "any"
		},
		"185": {
			"sourceFileName": "src/hidden.ts",
			"qualifiedName": ""
		},
		"186": {
			"sourceFileName": "src/hidden.ts",
			"qualifiedName": "default"
		},
		"187": {
			"sourceFileName": "src/hidden.ts",
			"qualifiedName": "default"
		},
		"188": {
			"sourceFileName": "src/hidden.ts",
			"qualifiedName": "elm"
		},
		"189": {
			"sourceFileName": "src/inDOM.ts",
			"qualifiedName": ""
		},
		"190": {
			"sourceFileName": "src/inDOM.ts",
			"qualifiedName": "default"
		},
		"191": {
			"sourceFileName": "src/inDOM.ts",
			"qualifiedName": "default"
		},
		"192": {
			"sourceFileName": "src/inDOM.ts",
			"qualifiedName": "elm"
		},
		"193": {
			"sourceFileName": "src/innerXML.ts",
			"qualifiedName": ""
		},
		"194": {
			"sourceFileName": "src/innerXML.ts",
			"qualifiedName": "default"
		},
		"195": {
			"sourceFileName": "src/innerXML.ts",
			"qualifiedName": "default"
		},
		"196": {
			"sourceFileName": "src/innerXML.ts",
			"qualifiedName": "XMLElement"
		},
		"197": {
			"sourceFileName": "src/insertAfter.ts",
			"qualifiedName": ""
		},
		"198": {
			"sourceFileName": "src/insertAfter.ts",
			"qualifiedName": "default"
		},
		"199": {
			"sourceFileName": "src/insertAfter.ts",
			"qualifiedName": "default"
		},
		"200": {
			"sourceFileName": "src/insertAfter.ts",
			"qualifiedName": "elm"
		},
		"201": {
			"sourceFileName": "src/insertAfter.ts",
			"qualifiedName": "insertElm"
		},
		"202": {
			"sourceFileName": "src/insertBefore.ts",
			"qualifiedName": ""
		},
		"203": {
			"sourceFileName": "src/insertBefore.ts",
			"qualifiedName": "default"
		},
		"204": {
			"sourceFileName": "src/insertBefore.ts",
			"qualifiedName": "default"
		},
		"205": {
			"sourceFileName": "src/insertBefore.ts",
			"qualifiedName": "elm"
		},
		"206": {
			"sourceFileName": "src/insertBefore.ts",
			"qualifiedName": "insertElm"
		},
		"207": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": ""
		},
		"208": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "PositionIndicator"
		},
		"209": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type.inside"
		},
		"211": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type.above"
		},
		"212": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type.below"
		},
		"213": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type.left"
		},
		"214": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "__type.right"
		},
		"215": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "default"
		},
		"216": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "default"
		},
		"217": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "elm"
		},
		"218": {
			"sourceFileName": "src/inView.ts",
			"qualifiedName": "threshold"
		},
		"219": {
			"sourceFileName": "src/invisible.ts",
			"qualifiedName": ""
		},
		"220": {
			"sourceFileName": "src/invisible.ts",
			"qualifiedName": "default"
		},
		"221": {
			"sourceFileName": "src/invisible.ts",
			"qualifiedName": "default"
		},
		"222": {
			"sourceFileName": "src/invisible.ts",
			"qualifiedName": "elm"
		},
		"223": {
			"sourceFileName": "src/isBlob.ts",
			"qualifiedName": ""
		},
		"224": {
			"sourceFileName": "src/isBlob.ts",
			"qualifiedName": "default"
		},
		"225": {
			"sourceFileName": "src/isBlob.ts",
			"qualifiedName": "default"
		},
		"226": {
			"sourceFileName": "src/isBlob.ts",
			"qualifiedName": "obj"
		},
		"227": {
			"sourceFileName": "src/isDocument.ts",
			"qualifiedName": ""
		},
		"228": {
			"sourceFileName": "src/isDocument.ts",
			"qualifiedName": "default"
		},
		"229": {
			"sourceFileName": "src/isDocument.ts",
			"qualifiedName": "default"
		},
		"230": {
			"sourceFileName": "src/isDocument.ts",
			"qualifiedName": "obj"
		},
		"231": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": ""
		},
		"232": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "ChildNodeWithParent"
		},
		"233": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "ChildNodeWithParent.parentElement"
		},
		"234": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "ChildNodeWithParent.parentNode"
		},
		"235": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.after"
		},
		"236": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.after"
		},
		"237": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "nodes"
		},
		"238": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.before"
		},
		"239": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.before"
		},
		"240": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "nodes"
		},
		"241": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.remove"
		},
		"242": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.remove"
		},
		"243": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.replaceWith"
		},
		"244": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "ChildNode.replaceWith"
		},
		"245": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "nodes"
		},
		"246": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.baseURI"
		},
		"247": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.childNodes"
		},
		"248": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.firstChild"
		},
		"249": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isConnected"
		},
		"250": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.lastChild"
		},
		"251": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.nextSibling"
		},
		"252": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.nodeName"
		},
		"253": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.nodeType"
		},
		"254": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.nodeValue"
		},
		"255": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.ownerDocument"
		},
		"256": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.previousSibling"
		},
		"257": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.textContent"
		},
		"258": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.appendChild"
		},
		"259": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.appendChild"
		},
		"260": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "T"
		},
		"261": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "node"
		},
		"262": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.cloneNode"
		},
		"263": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.cloneNode"
		},
		"264": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "deep"
		},
		"265": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.compareDocumentPosition"
		},
		"266": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.compareDocumentPosition"
		},
		"267": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "other"
		},
		"268": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.contains"
		},
		"269": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.contains"
		},
		"270": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "other"
		},
		"271": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.getRootNode"
		},
		"272": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.getRootNode"
		},
		"273": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "options"
		},
		"274": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.hasChildNodes"
		},
		"275": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.hasChildNodes"
		},
		"276": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.insertBefore"
		},
		"277": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.insertBefore"
		},
		"278": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "T"
		},
		"279": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "node"
		},
		"280": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "child"
		},
		"281": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isDefaultNamespace"
		},
		"282": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isDefaultNamespace"
		},
		"283": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "namespace"
		},
		"284": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isEqualNode"
		},
		"285": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isEqualNode"
		},
		"286": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "otherNode"
		},
		"287": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isSameNode"
		},
		"288": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.isSameNode"
		},
		"289": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "otherNode"
		},
		"290": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.lookupNamespaceURI"
		},
		"291": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.lookupNamespaceURI"
		},
		"292": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "prefix"
		},
		"293": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.lookupPrefix"
		},
		"294": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.lookupPrefix"
		},
		"295": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "namespace"
		},
		"296": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.normalize"
		},
		"297": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.normalize"
		},
		"298": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.removeChild"
		},
		"299": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.removeChild"
		},
		"300": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "T"
		},
		"301": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "child"
		},
		"302": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.replaceChild"
		},
		"303": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.replaceChild"
		},
		"304": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "T"
		},
		"305": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "node"
		},
		"306": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "child"
		},
		"307": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.ELEMENT_NODE"
		},
		"308": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.ATTRIBUTE_NODE"
		},
		"309": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.TEXT_NODE"
		},
		"310": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.CDATA_SECTION_NODE"
		},
		"311": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.ENTITY_REFERENCE_NODE"
		},
		"312": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.ENTITY_NODE"
		},
		"313": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.PROCESSING_INSTRUCTION_NODE"
		},
		"314": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.COMMENT_NODE"
		},
		"315": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_NODE"
		},
		"316": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_TYPE_NODE"
		},
		"317": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_FRAGMENT_NODE"
		},
		"318": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.NOTATION_NODE"
		},
		"319": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_DISCONNECTED"
		},
		"320": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_PRECEDING"
		},
		"321": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_FOLLOWING"
		},
		"322": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_CONTAINS"
		},
		"323": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_CONTAINED_BY"
		},
		"324": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
		},
		"325": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.addEventListener"
		},
		"326": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.addEventListener"
		},
		"327": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "type"
		},
		"328": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "callback"
		},
		"329": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "options"
		},
		"330": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.dispatchEvent"
		},
		"331": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.dispatchEvent"
		},
		"332": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "event"
		},
		"333": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.removeEventListener"
		},
		"334": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "EventTarget.removeEventListener"
		},
		"335": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "type"
		},
		"336": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "callback"
		},
		"337": {
			"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "options"
		},
		"338": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "default"
		},
		"339": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "default"
		},
		"340": {
			"sourceFileName": "src/isDOMChildNode.ts",
			"qualifiedName": "node"
		},
		"341": {
			"sourceFileName": "src/isDOMContainer.ts",
			"qualifiedName": ""
		},
		"342": {
			"sourceFileName": "src/isDOMContainer.ts",
			"qualifiedName": "default"
		},
		"343": {
			"sourceFileName": "src/isDOMContainer.ts",
			"qualifiedName": "default"
		},
		"344": {
			"sourceFileName": "src/isDOMContainer.ts",
			"qualifiedName": "obj"
		},
		"345": {
			"sourceFileName": "src/isDOMElement.ts",
			"qualifiedName": ""
		},
		"346": {
			"sourceFileName": "src/isDOMElement.ts",
			"qualifiedName": "default"
		},
		"347": {
			"sourceFileName": "src/isDOMElement.ts",
			"qualifiedName": "default"
		},
		"348": {
			"sourceFileName": "src/isDOMElement.ts",
			"qualifiedName": "obj"
		},
		"349": {
			"sourceFileName": "src/isDOMElement.ts",
			"qualifiedName": "tags"
		},
		"350": {
			"sourceFileName": "src/isDOMFragment.ts",
			"qualifiedName": ""
		},
		"351": {
			"sourceFileName": "src/isDOMFragment.ts",
			"qualifiedName": "default"
		},
		"352": {
			"sourceFileName": "src/isDOMFragment.ts",
			"qualifiedName": "default"
		},
		"353": {
			"sourceFileName": "src/isDOMFragment.ts",
			"qualifiedName": "obj"
		},
		"354": {
			"sourceFileName": "src/isDOMNode.ts",
			"qualifiedName": ""
		},
		"355": {
			"sourceFileName": "src/isDOMNode.ts",
			"qualifiedName": "default"
		},
		"356": {
			"sourceFileName": "src/isDOMNode.ts",
			"qualifiedName": "default"
		},
		"357": {
			"sourceFileName": "src/isDOMNode.ts",
			"qualifiedName": "node"
		},
		"358": {
			"sourceFileName": "src/isDOMRoot.ts",
			"qualifiedName": ""
		},
		"359": {
			"sourceFileName": "src/isDOMRoot.ts",
			"qualifiedName": "default"
		},
		"360": {
			"sourceFileName": "src/isDOMRoot.ts",
			"qualifiedName": "default"
		},
		"361": {
			"sourceFileName": "src/isDOMRoot.ts",
			"qualifiedName": "obj"
		},
		"362": {
			"sourceFileName": "src/isEventTarget.ts",
			"qualifiedName": ""
		},
		"363": {
			"sourceFileName": "src/isEventTarget.ts",
			"qualifiedName": "default"
		},
		"364": {
			"sourceFileName": "src/isEventTarget.ts",
			"qualifiedName": "default"
		},
		"365": {
			"sourceFileName": "src/isEventTarget.ts",
			"qualifiedName": "obj"
		},
		"366": {
			"sourceFileName": "src/isWindow.ts",
			"qualifiedName": ""
		},
		"367": {
			"sourceFileName": "src/isWindow.ts",
			"qualifiedName": "default"
		},
		"368": {
			"sourceFileName": "src/isWindow.ts",
			"qualifiedName": "default"
		},
		"369": {
			"sourceFileName": "src/isWindow.ts",
			"qualifiedName": "obj"
		},
		"370": {
			"sourceFileName": "src/matches.ts",
			"qualifiedName": ""
		},
		"371": {
			"sourceFileName": "src/matches.ts",
			"qualifiedName": "default"
		},
		"372": {
			"sourceFileName": "src/matches.ts",
			"qualifiedName": "default"
		},
		"373": {
			"sourceFileName": "src/matches.ts",
			"qualifiedName": "elm"
		},
		"374": {
			"sourceFileName": "src/matches.ts",
			"qualifiedName": "selector"
		},
		"375": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": ""
		},
		"376": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "off"
		},
		"377": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "off"
		},
		"378": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "elm"
		},
		"379": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "eventNames"
		},
		"380": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "handler"
		},
		"381": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "options"
		},
		"382": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "off"
		},
		"383": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "eventNames"
		},
		"384": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "handler"
		},
		"385": {
			"sourceFileName": "src/off.ts",
			"qualifiedName": "options"
		},
		"386": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": ""
		},
		"387": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "on"
		},
		"388": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "on"
		},
		"389": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "elm"
		},
		"390": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "eventNames"
		},
		"391": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "handler"
		},
		"392": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "options"
		},
		"393": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "on"
		},
		"394": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "eventNames"
		},
		"395": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "handler"
		},
		"396": {
			"sourceFileName": "src/on.ts",
			"qualifiedName": "options"
		},
		"397": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": ""
		},
		"398": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "WhenFunction"
		},
		"399": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "__type"
		},
		"400": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "__type"
		},
		"401": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "e"
		},
		"402": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "OnceEventListenerOptions"
		},
		"403": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "__type.when"
		},
		"405": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "once"
		},
		"406": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "once"
		},
		"407": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "elm"
		},
		"408": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "eventNames"
		},
		"409": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "handler"
		},
		"410": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "options"
		},
		"411": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "once"
		},
		"412": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "eventNames"
		},
		"413": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "handler"
		},
		"414": {
			"sourceFileName": "src/once.ts",
			"qualifiedName": "options"
		},
		"415": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": ""
		},
		"416": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "AttributeMapping"
		},
		"417": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "Attributes"
		},
		"418": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "SelectorParsing"
		},
		"419": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "__type"
		},
		"420": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "__type.tagName"
		},
		"421": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "__type.attributes"
		},
		"422": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "default"
		},
		"423": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "default"
		},
		"424": {
			"sourceFileName": "src/parseSelector.ts",
			"qualifiedName": "selector"
		},
		"425": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": ""
		},
		"426": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "Position"
		},
		"427": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type"
		},
		"428": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.top"
		},
		"429": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.left"
		},
		"430": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.right"
		},
		"431": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.bottom"
		},
		"432": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "PositionData"
		},
		"433": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "PositionData.parent"
		},
		"434": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "PositionData.viewport"
		},
		"435": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.top"
		},
		"436": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.left"
		},
		"437": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.right"
		},
		"438": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "__type.bottom"
		},
		"439": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "default"
		},
		"440": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "default"
		},
		"441": {
			"sourceFileName": "src/position.ts",
			"qualifiedName": "elm"
		},
		"442": {
			"sourceFileName": "src/prepend.ts",
			"qualifiedName": ""
		},
		"443": {
			"sourceFileName": "src/prepend.ts",
			"qualifiedName": "default"
		},
		"444": {
			"sourceFileName": "src/prepend.ts",
			"qualifiedName": "default"
		},
		"445": {
			"sourceFileName": "src/prepend.ts",
			"qualifiedName": "elm"
		},
		"446": {
			"sourceFileName": "src/prepend.ts",
			"qualifiedName": "insertElm"
		},
		"447": {
			"sourceFileName": "src/removeClass.ts",
			"qualifiedName": ""
		},
		"448": {
			"sourceFileName": "src/removeClass.ts",
			"qualifiedName": "default"
		},
		"449": {
			"sourceFileName": "src/removeClass.ts",
			"qualifiedName": "default"
		},
		"450": {
			"sourceFileName": "src/removeClass.ts",
			"qualifiedName": "elm"
		},
		"451": {
			"sourceFileName": "src/removeClass.ts",
			"qualifiedName": "classNames"
		},
		"452": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": ""
		},
		"453": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": "default"
		},
		"454": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": "default"
		},
		"455": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": "elm"
		},
		"456": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": "classNames"
		},
		"457": {
			"sourceFileName": "src/replaceClass.ts",
			"qualifiedName": "replacements"
		},
		"458": {
			"sourceFileName": "src/replaceNode.ts",
			"qualifiedName": ""
		},
		"459": {
			"sourceFileName": "src/replaceNode.ts",
			"qualifiedName": "default"
		},
		"460": {
			"sourceFileName": "src/replaceNode.ts",
			"qualifiedName": "default"
		},
		"461": {
			"sourceFileName": "src/replaceNode.ts",
			"qualifiedName": "elm"
		},
		"462": {
			"sourceFileName": "src/replaceNode.ts",
			"qualifiedName": "replacement"
		},
		"463": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": ""
		},
		"464": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "fileSavingSupported"
		},
		"465": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "fileSavingSupported"
		},
		"466": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "default"
		},
		"467": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "default"
		},
		"468": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "content"
		},
		"469": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "name"
		},
		"470": {
			"sourceFileName": "src/saveFile.ts",
			"qualifiedName": "type"
		},
		"471": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": ""
		},
		"472": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "ScrollInfo"
		},
		"473": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type"
		},
		"474": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.x"
		},
		"475": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.y"
		},
		"476": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.xMax"
		},
		"477": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.yMax"
		},
		"478": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.xPct"
		},
		"479": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "__type.yPct"
		},
		"480": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "default"
		},
		"481": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "default"
		},
		"482": {
			"sourceFileName": "src/scrollInfo.ts",
			"qualifiedName": "elm"
		},
		"483": {
			"sourceFileName": "src/scrollParent.ts",
			"qualifiedName": ""
		},
		"484": {
			"sourceFileName": "src/scrollParent.ts",
			"qualifiedName": "default"
		},
		"485": {
			"sourceFileName": "src/scrollParent.ts",
			"qualifiedName": "default"
		},
		"486": {
			"sourceFileName": "src/scrollParent.ts",
			"qualifiedName": "elm"
		},
		"487": {
			"sourceFileName": "src/selectorToHTML.ts",
			"qualifiedName": ""
		},
		"488": {
			"sourceFileName": "src/selectorToHTML.ts",
			"qualifiedName": "default"
		},
		"489": {
			"sourceFileName": "src/selectorToHTML.ts",
			"qualifiedName": "default"
		},
		"490": {
			"sourceFileName": "src/selectorToHTML.ts",
			"qualifiedName": "selector"
		},
		"491": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": ""
		},
		"492": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "previousSiblings"
		},
		"493": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "previousSiblings"
		},
		"494": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "elm"
		},
		"495": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "nextSiblings"
		},
		"496": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "nextSiblings"
		},
		"497": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "elm"
		},
		"498": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "default"
		},
		"499": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "default"
		},
		"500": {
			"sourceFileName": "src/siblings.ts",
			"qualifiedName": "elm"
		},
		"501": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": ""
		},
		"502": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elmSize"
		},
		"503": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elmSize"
		},
		"504": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"505": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "type"
		},
		"506": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "windowSize"
		},
		"507": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "windowSize"
		},
		"508": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "win"
		},
		"509": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "type"
		},
		"510": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "Size"
		},
		"511": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "__type"
		},
		"512": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "__type.width"
		},
		"513": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "__type.height"
		},
		"514": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType"
		},
		"515": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType.MARGIN_BOX"
		},
		"516": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType.OUTER"
		},
		"517": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType.INNER"
		},
		"518": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType.CONTENT_BOX"
		},
		"519": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "SizeType.CONTENT"
		},
		"520": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "marginBoxSize"
		},
		"521": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "marginBoxSize"
		},
		"522": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"523": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "outerSize"
		},
		"524": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "outerSize"
		},
		"525": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"526": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "innerSize"
		},
		"527": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "innerSize"
		},
		"528": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"529": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "contentSize"
		},
		"530": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "contentSize"
		},
		"531": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"532": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "contentBoxSize"
		},
		"533": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "contentBoxSize"
		},
		"534": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"535": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "size"
		},
		"536": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "size"
		},
		"537": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "type"
		},
		"538": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "size"
		},
		"539": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "elm"
		},
		"540": {
			"sourceFileName": "src/size.ts",
			"qualifiedName": "type"
		},
		"541": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": ""
		},
		"542": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "supportsProp"
		},
		"543": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "supportsProp"
		},
		"544": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "prop"
		},
		"545": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "value"
		},
		"546": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "PrefixedPropMatch"
		},
		"547": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "__type"
		},
		"548": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "__type.prop"
		},
		"549": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "__type.value"
		},
		"550": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "__type.prefix"
		},
		"551": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "default"
		},
		"552": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "default"
		},
		"553": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "prop"
		},
		"554": {
			"sourceFileName": "src/supportsCSS.ts",
			"qualifiedName": "value"
		},
		"555": {
			"sourceFileName": "src/toDOM.ts",
			"qualifiedName": ""
		},
		"556": {
			"sourceFileName": "src/toDOM.ts",
			"qualifiedName": "default"
		},
		"557": {
			"sourceFileName": "src/toDOM.ts",
			"qualifiedName": "default"
		},
		"558": {
			"sourceFileName": "src/toDOM.ts",
			"qualifiedName": "html"
		},
		"559": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": ""
		},
		"560": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": "default"
		},
		"561": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": "default"
		},
		"562": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": "elm"
		},
		"563": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": "classNames"
		},
		"564": {
			"sourceFileName": "src/toggleClass.ts",
			"qualifiedName": "force"
		},
		"565": {
			"sourceFileName": "src/toggleFullscreen.ts",
			"qualifiedName": ""
		},
		"566": {
			"sourceFileName": "src/toggleFullscreen.ts",
			"qualifiedName": "default"
		},
		"567": {
			"sourceFileName": "src/toggleFullscreen.ts",
			"qualifiedName": "default"
		},
		"568": {
			"sourceFileName": "src/toggleFullscreen.ts",
			"qualifiedName": "elm"
		},
		"569": {
			"sourceFileName": "src/toggleFullscreen.ts",
			"qualifiedName": "options"
		},
		"570": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": ""
		},
		"571": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "trigger"
		},
		"572": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "trigger"
		},
		"573": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "elm"
		},
		"574": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "eventNames"
		},
		"575": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "data"
		},
		"576": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "trigger"
		},
		"577": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "eventNames"
		},
		"578": {
			"sourceFileName": "src/trigger.ts",
			"qualifiedName": "data"
		},
		"579": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": ""
		},
		"580": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": "CSSStyleKey"
		},
		"581": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": "Noop"
		},
		"582": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "src/types.d.ts",
			"qualifiedName": "GeneralWindow"
		},
		"585": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": ""
		},
		"586": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "VendorPrefixing"
		},
		"587": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "__type"
		},
		"588": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "__type.prefix"
		},
		"589": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "__type.js"
		},
		"590": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "__type.css"
		},
		"591": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "default"
		},
		"592": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "default"
		},
		"593": {
			"sourceFileName": "src/vendorPrefixed.ts",
			"qualifiedName": "str"
		},
		"594": {
			"sourceFileName": "src/viewport.ts",
			"qualifiedName": ""
		},
		"595": {
			"sourceFileName": "src/viewport.ts",
			"qualifiedName": "default"
		},
		"596": {
			"sourceFileName": "src/viewport.ts",
			"qualifiedName": "default"
		},
		"597": {
			"sourceFileName": "src/viewport.ts",
			"qualifiedName": "elm"
		},
		"598": {
			"sourceFileName": "src/visible.ts",
			"qualifiedName": ""
		},
		"599": {
			"sourceFileName": "src/visible.ts",
			"qualifiedName": "default"
		},
		"600": {
			"sourceFileName": "src/visible.ts",
			"qualifiedName": "default"
		},
		"601": {
			"sourceFileName": "src/visible.ts",
			"qualifiedName": "elm"
		},
		"602": {
			"sourceFileName": "src/wrap.ts",
			"qualifiedName": ""
		},
		"603": {
			"sourceFileName": "src/wrap.ts",
			"qualifiedName": "default"
		},
		"604": {
			"sourceFileName": "src/wrap.ts",
			"qualifiedName": "default"
		},
		"605": {
			"sourceFileName": "src/wrap.ts",
			"qualifiedName": "elm"
		},
		"606": {
			"sourceFileName": "src/wrap.ts",
			"qualifiedName": "html"
		}
	}
}